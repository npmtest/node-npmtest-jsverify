{"/home/travis/build/npmtest/node-npmtest-jsverify/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jsverify */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/lib.npmtest_jsverify.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/lib.npmtest_jsverify.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jsverify */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jsverify = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jsverify = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jsverify && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jsverify */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jsverify","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jsverify.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jsverify.rollup.js'] =","            local.assetsDict['/assets.npmtest_jsverify.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jsverify.__dirname + '/lib.npmtest_jsverify.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/jsverify.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/jsverify.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":1,"163":0,"164":1,"165":1,"166":36,"167":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"shrinkResult","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":69}}},"2":{"name":"(anonymous_2)","line":150,"loc":{"start":{"line":150,"column":45},"end":{"line":150,"column":64}}},"3":{"name":"(anonymous_3)","line":152,"loc":{"start":{"line":152,"column":26},"end":{"line":152,"column":44}}},"4":{"name":"(anonymous_4)","line":157,"loc":{"start":{"line":157,"column":30},"end":{"line":157,"column":54}}},"5":{"name":"isArbitrary","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":26}}},"6":{"name":"forall","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":184,"column":18}}},"7":{"name":"(anonymous_7)","line":202,"loc":{"start":{"line":202,"column":18},"end":{"line":202,"column":31}}},"8":{"name":"test","line":209,"loc":{"start":{"line":209,"column":2},"end":{"line":209,"column":34}}},"9":{"name":"(anonymous_9)","line":212,"loc":{"start":{"line":212,"column":37},"end":{"line":212,"column":55}}},"10":{"name":"(anonymous_10)","line":218,"loc":{"start":{"line":218,"column":33},"end":{"line":218,"column":54}}},"11":{"name":"(anonymous_11)","line":222,"loc":{"start":{"line":222,"column":67},"end":{"line":222,"column":81}}},"12":{"name":"(anonymous_12)","line":238,"loc":{"start":{"line":238,"column":9},"end":{"line":238,"column":25}}},"13":{"name":"(anonymous_13)","line":239,"loc":{"start":{"line":239,"column":21},"end":{"line":239,"column":36}}},"14":{"name":"formatFailedCase","line":245,"loc":{"start":{"line":245,"column":0},"end":{"line":245,"column":50}}},"15":{"name":"findRngState","line":262,"loc":{"start":{"line":262,"column":0},"end":{"line":262,"column":28}}},"16":{"name":"check","line":288,"loc":{"start":{"line":288,"column":0},"end":{"line":288,"column":31}}},"17":{"name":"loop","line":307,"loc":{"start":{"line":307,"column":2},"end":{"line":307,"column":19}}},"18":{"name":"(anonymous_18)","line":318,"loc":{"start":{"line":318,"column":26},"end":{"line":318,"column":44}}},"19":{"name":"(anonymous_19)","line":332,"loc":{"start":{"line":332,"column":42},"end":{"line":332,"column":55}}},"20":{"name":"checkThrow","line":348,"loc":{"start":{"line":348,"column":0},"end":{"line":348,"column":36}}},"21":{"name":"(anonymous_21)","line":354,"loc":{"start":{"line":354,"column":56},"end":{"line":354,"column":69}}},"22":{"name":"bddProperty","line":384,"loc":{"start":{"line":384,"column":0},"end":{"line":384,"column":27}}},"23":{"name":"(anonymous_23)","line":388,"loc":{"start":{"line":388,"column":13},"end":{"line":388,"column":25}}},"24":{"name":"(anonymous_24)","line":389,"loc":{"start":{"line":389,"column":48},"end":{"line":389,"column":66}}},"25":{"name":"(anonymous_25)","line":399,"loc":{"start":{"line":399,"column":13},"end":{"line":399,"column":25}}},"26":{"name":"compile","line":411,"loc":{"start":{"line":411,"column":0},"end":{"line":411,"column":27}}},"27":{"name":"sampler","line":436,"loc":{"start":{"line":436,"column":0},"end":{"line":436,"column":28}}},"28":{"name":"(anonymous_28)","line":438,"loc":{"start":{"line":438,"column":9},"end":{"line":438,"column":26}}},"29":{"name":"throws","line":457,"loc":{"start":{"line":457,"column":0},"end":{"line":457,"column":39}}},"30":{"name":"assertForall","line":484,"loc":{"start":{"line":484,"column":0},"end":{"line":484,"column":24}}},"31":{"name":"checkForall","line":497,"loc":{"start":{"line":497,"column":0},"end":{"line":497,"column":23}}}},"statementMap":{"1":{"start":{"line":119,"column":0},"end":{"line":119,"column":31}},"2":{"start":{"line":120,"column":0},"end":{"line":120,"column":34}},"3":{"start":{"line":122,"column":0},"end":{"line":122,"column":30}},"4":{"start":{"line":123,"column":0},"end":{"line":123,"column":36}},"5":{"start":{"line":124,"column":0},"end":{"line":124,"column":46}},"6":{"start":{"line":125,"column":0},"end":{"line":125,"column":37}},"7":{"start":{"line":126,"column":0},"end":{"line":126,"column":28}},"8":{"start":{"line":127,"column":0},"end":{"line":127,"column":38}},"9":{"start":{"line":128,"column":0},"end":{"line":128,"column":36}},"10":{"start":{"line":129,"column":0},"end":{"line":129,"column":32}},"11":{"start":{"line":130,"column":0},"end":{"line":130,"column":36}},"12":{"start":{"line":131,"column":0},"end":{"line":131,"column":40}},"13":{"start":{"line":132,"column":0},"end":{"line":132,"column":30}},"14":{"start":{"line":133,"column":0},"end":{"line":133,"column":36}},"15":{"start":{"line":134,"column":0},"end":{"line":134,"column":34}},"16":{"start":{"line":140,"column":0},"end":{"line":170,"column":1}},"17":{"start":{"line":141,"column":2},"end":{"line":141,"column":86}},"18":{"start":{"line":142,"column":2},"end":{"line":142,"column":74}},"19":{"start":{"line":143,"column":2},"end":{"line":143,"column":81}},"20":{"start":{"line":145,"column":2},"end":{"line":145,"column":44}},"21":{"start":{"line":146,"column":2},"end":{"line":146,"column":40}},"22":{"start":{"line":148,"column":2},"end":{"line":148,"column":42}},"23":{"start":{"line":150,"column":2},"end":{"line":155,"column":5}},"24":{"start":{"line":151,"column":4},"end":{"line":151,"column":40}},"25":{"start":{"line":152,"column":4},"end":{"line":154,"column":7}},"26":{"start":{"line":153,"column":6},"end":{"line":153,"column":47}},"27":{"start":{"line":157,"column":2},"end":{"line":169,"column":5}},"28":{"start":{"line":158,"column":4},"end":{"line":168,"column":5}},"29":{"start":{"line":159,"column":6},"end":{"line":164,"column":8}},"30":{"start":{"line":165,"column":6},"end":{"line":165,"column":28}},"31":{"start":{"line":167,"column":6},"end":{"line":167,"column":26}},"32":{"start":{"line":172,"column":0},"end":{"line":177,"column":1}},"33":{"start":{"line":173,"column":2},"end":{"line":176,"column":35}},"34":{"start":{"line":184,"column":0},"end":{"line":243,"column":1}},"35":{"start":{"line":185,"column":2},"end":{"line":185,"column":51}},"36":{"start":{"line":186,"column":2},"end":{"line":186,"column":31}},"37":{"start":{"line":187,"column":2},"end":{"line":187,"column":39}},"38":{"start":{"line":188,"column":2},"end":{"line":188,"column":10}},"39":{"start":{"line":190,"column":2},"end":{"line":190,"column":38}},"40":{"start":{"line":192,"column":2},"end":{"line":197,"column":3}},"41":{"start":{"line":193,"column":4},"end":{"line":193,"column":44}},"42":{"start":{"line":194,"column":4},"end":{"line":194,"column":29}},"43":{"start":{"line":196,"column":4},"end":{"line":196,"column":22}},"44":{"start":{"line":199,"column":2},"end":{"line":199,"column":71}},"45":{"start":{"line":202,"column":2},"end":{"line":205,"column":5}},"46":{"start":{"line":203,"column":4},"end":{"line":203,"column":63}},"47":{"start":{"line":204,"column":4},"end":{"line":204,"column":26}},"48":{"start":{"line":207,"column":2},"end":{"line":207,"column":74}},"49":{"start":{"line":209,"column":2},"end":{"line":236,"column":3}},"50":{"start":{"line":210,"column":4},"end":{"line":210,"column":74}},"51":{"start":{"line":212,"column":4},"end":{"line":235,"column":7}},"52":{"start":{"line":213,"column":6},"end":{"line":234,"column":7}},"53":{"start":{"line":214,"column":8},"end":{"line":214,"column":20}},"54":{"start":{"line":215,"column":13},"end":{"line":234,"column":7}},"55":{"start":{"line":216,"column":8},"end":{"line":216,"column":27}},"56":{"start":{"line":218,"column":8},"end":{"line":231,"column":11}},"57":{"start":{"line":219,"column":10},"end":{"line":230,"column":11}},"58":{"start":{"line":220,"column":12},"end":{"line":220,"column":24}},"59":{"start":{"line":222,"column":12},"end":{"line":229,"column":15}},"60":{"start":{"line":223,"column":14},"end":{"line":228,"column":16}},"61":{"start":{"line":233,"column":8},"end":{"line":233,"column":84}},"62":{"start":{"line":238,"column":2},"end":{"line":242,"column":4}},"63":{"start":{"line":239,"column":4},"end":{"line":239,"column":69}},"64":{"start":{"line":239,"column":38},"end":{"line":239,"column":65}},"65":{"start":{"line":240,"column":4},"end":{"line":240,"column":29}},"66":{"start":{"line":241,"column":4},"end":{"line":241,"column":13}},"67":{"start":{"line":245,"column":0},"end":{"line":260,"column":1}},"68":{"start":{"line":246,"column":2},"end":{"line":246,"column":81}},"69":{"start":{"line":247,"column":2},"end":{"line":247,"column":53}},"70":{"start":{"line":248,"column":2},"end":{"line":248,"column":57}},"71":{"start":{"line":249,"column":2},"end":{"line":258,"column":3}},"72":{"start":{"line":250,"column":4},"end":{"line":257,"column":5}},"73":{"start":{"line":251,"column":6},"end":{"line":251,"column":43}},"74":{"start":{"line":252,"column":6},"end":{"line":254,"column":7}},"75":{"start":{"line":253,"column":8},"end":{"line":253,"column":47}},"76":{"start":{"line":256,"column":6},"end":{"line":256,"column":31}},"77":{"start":{"line":259,"column":2},"end":{"line":259,"column":13}},"78":{"start":{"line":262,"column":0},"end":{"line":268,"column":1}},"79":{"start":{"line":263,"column":2},"end":{"line":267,"column":3}},"80":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"81":{"start":{"line":265,"column":6},"end":{"line":265,"column":25}},"82":{"start":{"line":288,"column":0},"end":{"line":341,"column":1}},"83":{"start":{"line":289,"column":2},"end":{"line":289,"column":20}},"84":{"start":{"line":290,"column":2},"end":{"line":290,"column":30}},"85":{"start":{"line":291,"column":2},"end":{"line":291,"column":33}},"86":{"start":{"line":292,"column":2},"end":{"line":292,"column":35}},"87":{"start":{"line":294,"column":2},"end":{"line":294,"column":74}},"88":{"start":{"line":296,"column":2},"end":{"line":296,"column":12}},"89":{"start":{"line":298,"column":2},"end":{"line":305,"column":3}},"90":{"start":{"line":299,"column":4},"end":{"line":299,"column":41}},"91":{"start":{"line":300,"column":9},"end":{"line":305,"column":3}},"92":{"start":{"line":301,"column":4},"end":{"line":301,"column":47}},"93":{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},"94":{"start":{"line":303,"column":6},"end":{"line":303,"column":39}},"95":{"start":{"line":307,"column":2},"end":{"line":330,"column":3}},"96":{"start":{"line":308,"column":4},"end":{"line":308,"column":40}},"97":{"start":{"line":309,"column":4},"end":{"line":311,"column":5}},"98":{"start":{"line":310,"column":6},"end":{"line":310,"column":18}},"99":{"start":{"line":313,"column":4},"end":{"line":313,"column":36}},"100":{"start":{"line":316,"column":4},"end":{"line":316,"column":41}},"101":{"start":{"line":318,"column":4},"end":{"line":329,"column":7}},"102":{"start":{"line":319,"column":6},"end":{"line":328,"column":7}},"103":{"start":{"line":320,"column":8},"end":{"line":320,"column":27}},"104":{"start":{"line":322,"column":8},"end":{"line":322,"column":25}},"105":{"start":{"line":324,"column":8},"end":{"line":326,"column":9}},"106":{"start":{"line":325,"column":10},"end":{"line":325,"column":86}},"107":{"start":{"line":327,"column":8},"end":{"line":327,"column":22}},"108":{"start":{"line":332,"column":2},"end":{"line":340,"column":6}},"109":{"start":{"line":333,"column":4},"end":{"line":337,"column":5}},"110":{"start":{"line":334,"column":6},"end":{"line":334,"column":79}},"111":{"start":{"line":334,"column":25},"end":{"line":334,"column":77}},"112":{"start":{"line":336,"column":6},"end":{"line":336,"column":25}},"113":{"start":{"line":339,"column":4},"end":{"line":339,"column":13}},"114":{"start":{"line":348,"column":0},"end":{"line":364,"column":1}},"115":{"start":{"line":349,"column":2},"end":{"line":349,"column":20}},"116":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"117":{"start":{"line":351,"column":4},"end":{"line":351,"column":22}},"118":{"start":{"line":354,"column":2},"end":{"line":363,"column":6}},"119":{"start":{"line":355,"column":4},"end":{"line":362,"column":5}},"120":{"start":{"line":356,"column":6},"end":{"line":361,"column":7}},"121":{"start":{"line":357,"column":8},"end":{"line":357,"column":44}},"122":{"start":{"line":358,"column":8},"end":{"line":358,"column":20}},"123":{"start":{"line":360,"column":8},"end":{"line":360,"column":45}},"124":{"start":{"line":384,"column":0},"end":{"line":404,"column":1}},"125":{"start":{"line":386,"column":2},"end":{"line":386,"column":54}},"126":{"start":{"line":387,"column":2},"end":{"line":402,"column":3}},"127":{"start":{"line":388,"column":4},"end":{"line":396,"column":7}},"128":{"start":{"line":389,"column":6},"end":{"line":395,"column":10}},"129":{"start":{"line":390,"column":8},"end":{"line":394,"column":9}},"130":{"start":{"line":391,"column":10},"end":{"line":391,"column":36}},"131":{"start":{"line":392,"column":15},"end":{"line":394,"column":9}},"132":{"start":{"line":393,"column":10},"end":{"line":393,"column":50}},"133":{"start":{"line":398,"column":4},"end":{"line":398,"column":45}},"134":{"start":{"line":399,"column":4},"end":{"line":401,"column":7}},"135":{"start":{"line":400,"column":6},"end":{"line":400,"column":30}},"136":{"start":{"line":411,"column":0},"end":{"line":414,"column":1}},"137":{"start":{"line":412,"column":2},"end":{"line":412,"column":58}},"138":{"start":{"line":413,"column":2},"end":{"line":413,"column":38}},"139":{"start":{"line":436,"column":0},"end":{"line":450,"column":1}},"140":{"start":{"line":437,"column":2},"end":{"line":437,"column":56}},"141":{"start":{"line":438,"column":2},"end":{"line":449,"column":4}},"142":{"start":{"line":439,"column":4},"end":{"line":448,"column":5}},"143":{"start":{"line":440,"column":6},"end":{"line":440,"column":19}},"144":{"start":{"line":441,"column":6},"end":{"line":441,"column":30}},"145":{"start":{"line":442,"column":6},"end":{"line":444,"column":7}},"146":{"start":{"line":443,"column":8},"end":{"line":443,"column":38}},"147":{"start":{"line":445,"column":6},"end":{"line":445,"column":17}},"148":{"start":{"line":447,"column":6},"end":{"line":447,"column":33}},"149":{"start":{"line":457,"column":0},"end":{"line":475,"column":1}},"150":{"start":{"line":458,"column":2},"end":{"line":458,"column":110}},"151":{"start":{"line":459,"column":2},"end":{"line":459,"column":109}},"152":{"start":{"line":461,"column":2},"end":{"line":474,"column":3}},"153":{"start":{"line":462,"column":4},"end":{"line":462,"column":12}},"154":{"start":{"line":463,"column":4},"end":{"line":463,"column":17}},"155":{"start":{"line":465,"column":4},"end":{"line":473,"column":5}},"156":{"start":{"line":466,"column":6},"end":{"line":470,"column":7}},"157":{"start":{"line":467,"column":8},"end":{"line":467,"column":62}},"158":{"start":{"line":469,"column":8},"end":{"line":469,"column":21}},"159":{"start":{"line":472,"column":6},"end":{"line":472,"column":18}},"160":{"start":{"line":484,"column":0},"end":{"line":486,"column":1}},"161":{"start":{"line":485,"column":2},"end":{"line":485,"column":51}},"162":{"start":{"line":497,"column":0},"end":{"line":499,"column":1}},"163":{"start":{"line":498,"column":2},"end":{"line":498,"column":46}},"164":{"start":{"line":540,"column":0},"end":{"line":576,"column":2}},"165":{"start":{"line":580,"column":0},"end":{"line":582,"column":1}},"166":{"start":{"line":581,"column":2},"end":{"line":581,"column":28}},"167":{"start":{"line":585,"column":0},"end":{"line":585,"column":21}}},"branchMap":{"1":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":31},"end":{"line":153,"column":37}},{"start":{"line":153,"column":40},"end":{"line":153,"column":46}}]},"2":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"3":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":33}},{"start":{"line":173,"column":37},"end":{"line":173,"column":62}},{"start":{"line":174,"column":4},"end":{"line":174,"column":39}},{"start":{"line":175,"column":4},"end":{"line":175,"column":36}},{"start":{"line":176,"column":4},"end":{"line":176,"column":34}}]},"4":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"5":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":27}},{"start":{"line":192,"column":31},"end":{"line":192,"column":58}}]},"6":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":32},"end":{"line":203,"column":58}},{"start":{"line":203,"column":61},"end":{"line":203,"column":62}}]},"7":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":6}},{"start":{"line":213,"column":6},"end":{"line":213,"column":6}}]},"8":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":13},"end":{"line":215,"column":13}},{"start":{"line":215,"column":13},"end":{"line":215,"column":13}}]},"9":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":10},"end":{"line":219,"column":10}},{"start":{"line":219,"column":10},"end":{"line":219,"column":10}}]},"10":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":21},"end":{"line":227,"column":27}},{"start":{"line":227,"column":31},"end":{"line":227,"column":44}}]},"11":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":58},"end":{"line":233,"column":61}},{"start":{"line":233,"column":65},"end":{"line":233,"column":66}}]},"12":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":25},"end":{"line":247,"column":35}},{"start":{"line":247,"column":39},"end":{"line":247,"column":44}}]},"13":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"14":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"15":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":6},"end":{"line":252,"column":6}},{"start":{"line":252,"column":6},"end":{"line":252,"column":6}}]},"16":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"17":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":9},"end":{"line":289,"column":13}},{"start":{"line":289,"column":17},"end":{"line":289,"column":19}}]},"18":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":14},"end":{"line":290,"column":23}},{"start":{"line":290,"column":27},"end":{"line":290,"column":29}}]},"19":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":15},"end":{"line":291,"column":25}},{"start":{"line":291,"column":29},"end":{"line":291,"column":32}}]},"20":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":15},"end":{"line":292,"column":25}},{"start":{"line":292,"column":29},"end":{"line":292,"column":34}}]},"21":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"22":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":9},"end":{"line":300,"column":9}},{"start":{"line":300,"column":9},"end":{"line":300,"column":9}}]},"23":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"24":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"25":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"26":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":8},"end":{"line":324,"column":8}},{"start":{"line":324,"column":8},"end":{"line":324,"column":8}}]},"27":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":4},"end":{"line":333,"column":4}},{"start":{"line":333,"column":4},"end":{"line":333,"column":4}}]},"28":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]},"29":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":9},"end":{"line":349,"column":13}},{"start":{"line":349,"column":17},"end":{"line":349,"column":19}}]},"30":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"31":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":4},"end":{"line":355,"column":4}},{"start":{"line":355,"column":4},"end":{"line":355,"column":4}}]},"32":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":6},"end":{"line":356,"column":6}},{"start":{"line":356,"column":6},"end":{"line":356,"column":6}}]},"33":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"34":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":8},"end":{"line":390,"column":8}},{"start":{"line":390,"column":8},"end":{"line":390,"column":8}}]},"35":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":15},"end":{"line":392,"column":15}},{"start":{"line":392,"column":15},"end":{"line":392,"column":15}}]},"36":{"line":412,"type":"cond-expr","locations":[{"start":{"line":412,"column":14},"end":{"line":412,"column":43}},{"start":{"line":412,"column":46},"end":{"line":412,"column":57}}]},"37":{"line":437,"type":"cond-expr","locations":[{"start":{"line":437,"column":36},"end":{"line":437,"column":50}},{"start":{"line":437,"column":53},"end":{"line":437,"column":55}}]},"38":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":439,"column":4}},{"start":{"line":439,"column":4},"end":{"line":439,"column":4}}]},"39":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":9},"end":{"line":458,"column":28}},{"start":{"line":458,"column":32},"end":{"line":458,"column":59}}]},"40":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":9},"end":{"line":459,"column":30}},{"start":{"line":459,"column":34},"end":{"line":459,"column":61}}]},"41":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"42":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":6},"end":{"line":466,"column":6}},{"start":{"line":466,"column":6},"end":{"line":466,"column":6}}]},"43":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":15},"end":{"line":467,"column":36}},{"start":{"line":467,"column":40},"end":{"line":467,"column":61}}]}},"code":["/* @flow weak */","/**","  # JSVerify","","  <img src=\"https://raw.githubusercontent.com/jsverify/jsverify/master/jsverify-300.png\" align=\"right\" height=\"100\" />","","  > Property-based checking. Like QuickCheck.","","  [![Build Status](https://secure.travis-ci.org/jsverify/jsverify.svg?branch=master)](http://travis-ci.org/jsverify/jsverify)","  [![NPM version](https://badge.fury.io/js/jsverify.svg)](http://badge.fury.io/js/jsverify)","  [![Dependency Status](https://david-dm.org/jsverify/jsverify.svg)](https://david-dm.org/jsverify/jsverify)","  [![devDependency Status](https://david-dm.org/jsverify/jsverify/dev-status.svg)](https://david-dm.org/jsverify/jsverify#info=devDependencies)","  [![Code Climate](https://img.shields.io/codeclimate/github/jsverify/jsverify.svg)](https://codeclimate.com/github/jsverify/jsverify)","","  ## Getting Started","","  Install the module with: `npm install jsverify`","","  ## Synopsis","","  ```js","  var jsc = require(\"jsverify\");","","  // forall (f : bool -> bool) (b : bool), f (f (f b)) = f(b).","  var boolFnAppliedThrice =","    jsc.forall(\"bool -> bool\", \"bool\", function (f, b) {","      return f(f(f(b))) === f(b);","    });","","  jsc.assert(boolFnAppliedThrice);","  // OK, passed 100 tests","  ```","*/","\"use strict\";","","/**","  ## Documentation","","  ### Usage with [mocha](http://mochajs.org/)","","  Using jsverify with mocha is easy, just define the properties and use `jsverify.assert`.","","  Starting from version 0.4.3 you can write your specs without any boilerplate:","","  ```js","  describe(\"sort\", function () {","    jsc.property(\"idempotent\", \"array nat\", function (arr) {","      return _.isEqual(sort(sort(arr)), sort(arr));","    });","  });","  ```","","  Starting from version 0.8.0 you can write the specs in TypeScript. There are","  typings provided. The drawback is that you cannot use type DSL:","","  ```typescript","  describe(\"basic jsverify usage\", () => {","    jsc.property(\"(b && b) === b\", jsc.bool, b => (b && b) === b);","","    jsc.property(\"boolean fn thrice\", jsc.fn(jsc.bool), jsc.bool, (f, b) =>","      f(f(f(b))) === f(b)","    );","  });","  ```","","  You can also provide `--jsverifyRngState state` command line argument, to run tests with particular random generator state.","","  ```","  $ mocha examples/nat.js","","  1) natural numbers are less than 90:","   Error: Failed after 49 tests and 1 shrinks. rngState: 074e9b5f037a8c21d6; Counterexample: 90;","","  $ mocha examples/nat.js --grep 'are less than' --jsverifyRngState 074e9b5f037a8c21d6","","  1) natural numbers are less than 90:","     Error: Failed after 1 tests and 1 shrinks. rngState: 074e9b5f037a8c21d6; Counterexample: 90;","  ```","","  Erroneous case is found with first try.","","  ### Usage with [jasmine](https://jasmine.github.io/)","","  Check [jasmineHelpers.js](helpers/jasmineHelpers.js) and [jasmineHelpers2.js](helpers/jasmineHelpers2.js) for jasmine 1.3 and 2.0 respectively.","","  ## API Reference","","  > _Testing shows the presence, not the absence of bugs._","  >","  > Edsger W. Dijkstra","","  To show that propositions hold, we need to construct proofs.","  There are two extremes: proof by example (unit tests) and formal (machine-checked) proof.","  Property-based testing is somewhere in between.","  We formulate propositions, invariants or other properties we believe to hold, but","  only test it to hold for numerous (randomly generated) values.","","  Types and function signatures are written in [Coq](http://coq.inria.fr/)/[Haskell](http://www.haskell.org/haskellwiki/Haskell)-influenced style:","  C# -style `List<T> filter(List<T> v, Func<T, bool> predicate)` is represented by","  `filter(v: array T, predicate: T -> bool): array T` in our style.","","  Methods and objects live in `jsc` object, e.g. `shrink.bless` method is used by","  ```js","  var jsc = require(\"jsverify\");","  var foo = jsc.shrink.bless(...);","  ```","","  Methods starting with `.dot` are prototype methods:","  ```js","  var arb = jsc.nat;","  var arb2 = jsc.nat.smap(f, g);","  ```","","  `jsverify` can operate with both synchronous and asynchronous-promise properties.","  Generally every property can be wrapped inside [functor](http://learnyouahaskell.com/functors-applicative-functors-and-monoids),","  for now in either identity or promise functor, for synchronous and promise properties respectively.","*/","","var assert = require(\"assert\");","var lazyseq = require(\"lazy-seq\");","","var api = require(\"./api.js\");","var either = require(\"./either.js\");","var environment = require(\"./environment.js\");","var FMap = require(\"./finitemap.js\");","var fn = require(\"./fn.js\");","var functor = require(\"./functor.js\");","var random = require(\"./random.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var suchthat = require(\"./suchthat.js\");","var sum = require(\"./sum.js\");","var typify = require(\"./typify.js\");","var utils = require(\"./utils.js\");","","/**","  ### Properties","*/","","function shrinkResult(arbs, x, test, size, shrinksN, exc, transform) {","  assert(arbs.length === x.length, \"shrinkResult: arbs and x has to be of same size\");","  assert(typeof size === \"number\", \"shrinkResult: size should be number\");","  assert(typeof shrinksN === \"number\", \"shrinkResult: shrinkN should be number\");","","  var shrinks = utils.pluck(arbs, \"shrink\");","  var shows = utils.pluck(arbs, \"show\");","","  var shrinked = shrink.tuple(shrinks, x);","","  var shrinkP = lazyseq.fold(shrinked, true, function (y, rest) {","    var t = test(size, y, shrinksN + 1);","    return functor.map(t, function (tprime) {","      return tprime !== true ? tprime : rest();","    });","  });","","  return functor.map(shrinkP, function (shrinkPPrime) {","    if (shrinkPPrime === true) {","      var res = {","        counterexample: x,","        counterexamplestr: show.tuple(shows, x),","        shrinks: shrinksN,","        exc: exc,","      };","      return transform(res);","    } else {","      return shrinkPPrime;","    }","  });","}","","function isArbitrary(arb) {","  return (typeof arb === \"object\" || typeof arb === \"function\") &&","    typeof arb.generator === \"function\" &&","    typeof arb.shrink === \"function\" &&","    typeof arb.show === \"function\";","}","","/**","  - `forall(arbs: arbitrary a ..., userenv: (map arbitrary)?, prop : a -> property): property`","","      Property constructor","*/","function forall() {","  var args = Array.prototype.slice.call(arguments);","  var gens = args.slice(0, -1);","  var property = args[args.length - 1];","  var env;","","  var lastgen = gens[gens.length - 1];","","  if (!isArbitrary(lastgen) && typeof lastgen !== \"string\") {","    env = utils.merge(environment, lastgen);","    gens = gens.slice(0, -1);","  } else {","    env = environment;","  }","","  assert(gens.length > 0, \"forall requires at least single generator\");","","  // Map typify-dsl to hard generators","  gens = gens.map(function (g) {","    g = typeof g === \"string\" ? typify.parseTypify(env, g) : g;","    return utils.force(g);","  });","","  assert(typeof property === \"function\", \"property should be a function\");","","  function test(size, x, shrinks) {","    assert(Array.isArray(x), \"generators results should be always tuple\");","","    return functor.bind(property, x, function (r, exc) {","      if (r === true) {","        return true;","      } else if (typeof r === \"function\") {","        var rRec = r(size);","","        return functor.map(rRec, function (rRecPrime) {","          if (rRecPrime === true) {","            return true;","          } else {","            return shrinkResult(gens, x, test, size, shrinks, exc, function (rr) {","              return {","                counterexample: rr.counterexample.concat(rRecPrime.counterexample),","                counterexamplestr: rr.counterexamplestr, // + \"; \" + rRec.counterexamplestr,","                shrinks: rr.shrinks,","                exc: rr.exc || rRecPrime.exc,","              };","            });","          }","        });","      } else {","        return shrinkResult(gens, x, test, size, shrinks, exc || r, utils.identity);","      }","    });","  }","","  return function (size) {","    var x = gens.map(function (arb) { return arb.generator(size); });","    var r = test(size, x, 0);","    return r;","  };","}","","function formatFailedCase(r, state, includeStack) {","  var msg = \"Failed after \" + r.tests + \" tests and \" + r.shrinks + \" shrinks. \";","  msg += \"rngState: \" + (r.rngState || state) + \"; \";","  msg += \"Counterexample: \" + r.counterexamplestr + \"; \";","  if (r.exc) {","    if (r.exc instanceof Error) {","      msg += \"Exception: \" + r.exc.message;","      if (includeStack) {","        msg += \"\\nStack trace: \" + r.exc.stack;","      }","    } else {","      msg += \"Error: \" + r.exc;","    }","  }","  return msg;","}","","function findRngState(argv) { // eslint-disable-line consistent-return","  for (var i = 0; i < argv.length - 1; i++) {","    if (argv[i] === \"--jsverifyRngState\") {","      return argv[i + 1];","    }","  }","}","","/**","  - `check (prop: property, opts: checkoptions?): result`","","      Run random checks for given `prop`. If `prop` is promise based, result is also wrapped in promise.","","      Options:","      - `opts.tests` - test count to run, default 100","      - `opts.size`  - maximum size of generated values, default 50","      - `opts.quiet` - do not `console.log`","      - `opts.rngState` - state string for the rng","","      The `result` is `true` if check succeeds, otherwise it's an object with various fields:","      - `counterexample` - an input for which property fails.","      - `tests` - number of tests run before failing case is found","      - `shrinks` - number of shrinks performed","      - `exc` - an optional exception thrown by property function","      - `rngState` - random number generator's state before execution of the property","*/","function check(property, opts) {","  opts = opts || {};","  opts.size = opts.size || 50;","  opts.tests = opts.tests || 100;","  opts.quiet = opts.quiet || false;","","  assert(typeof property === \"function\", \"property should be a function\");","","  var state;","","  if (opts.rngState) {","    random.setStateString(opts.rngState);","  } else if (typeof process !== \"undefined\") {","    var argvState = findRngState(process.argv);","    if (argvState) {","      random.setStateString(argvState);","    }","  }","","  function loop(i) {","    state = random.currentStateString();","    if (i > opts.tests) {","      return true;","    }","","    var size = random(0, opts.size);","","    // wrap non-promises in trampoline","    var r = functor.pure(property(size));","","    return functor.map(r, function (rPrime) {","      if (rPrime === true) {","        return loop(i + 1);","      } else {","        rPrime.tests = i;","        /* global console */","        if (!opts.quiet) {","          console.error(formatFailedCase(rPrime, state, true), rPrime.counterexample);","        }","        return rPrime;","      }","    });","  }","","  return functor.run(functor.map(loop(1), function (r) {","    if (r === true) {","      if (!opts.quiet) { console.info(\"OK, passed \" + opts.tests + \" tests\"); }","    } else {","      r.rngState = state;","    }","","    return r;","  }));","}","","/**","  - `assert(prop: property, opts: checkoptions?) : void`","","      Same as `check`, but throw exception if property doesn't hold.","*/","function checkThrow(property, opts) {","  opts = opts || {};","  if (opts.quiet === undefined) {","    opts.quiet = true;","  }","","  return functor.run(functor.map(check(property, opts), function (r) {","    if (r !== true) {","      if (r.exc instanceof Error) {","        r.exc.message = formatFailedCase(r);","        throw r.exc;","      } else {","        throw new Error(formatFailedCase(r));","      }","    }","  }));","}","","/**","   - `property(name: string, ...)`","","      Assuming there is globally defined `it`, the same as:","","      ```js","      it(name, function () {","        jsc.assert(jsc.forall(...));","      }","      ```","","      You can use `property` to write facts too:","      ```js","      jsc.property(\"+0 === -0\", function () {","        return +0 === -0;","      });","      ```","*/","function bddProperty(name) {","  /* global it: true */","  var args = Array.prototype.slice.call(arguments, 1);","  if (args.length === 1) {","    it(name, function () {","      return functor.run(functor.map(args[0](), function (result) { // eslint-disable-line consistent-return","        if (typeof result === \"function\") {","          return checkThrow(result);","        } else if (result !== true) {","          throw new Error(name + \" doesn't hold\");","        }","      }));","    });","  } else {","    var prop = forall.apply(undefined, args);","    it(name, function () {","      return checkThrow(prop);","    });","  }","  /* global it: false */","}","","/**","  - `compile(desc: string, env: typeEnv?): arbitrary a`","","      Compile the type description in provided type environment, or default one.","*/","function compile(str, env) {","  env = env ? utils.merge(environment, env) : environment;","  return typify.parseTypify(env, str);","}","","/**","  - `sampler(arb: arbitrary a, genSize: nat = 10): (sampleSize: nat?) -> a`","","      Create a sampler for a given arbitrary with an optional size. Handy when used in","      a REPL:","      ```","      > jsc = require('jsverify') // or require('./lib/jsverify') w/in the project","      ...","      > jsonSampler = jsc.sampler(jsc.json, 4)","      [Function]","      > jsonSampler()","      0.08467432763427496","      > jsonSampler()","      [ [ [] ] ]","      > jsonSampler()","      ''","      > sampledJson(2)","      [-0.4199344692751765, false]","      ```","*/","function sampler(arb, size) {","  size = typeof size === \"number\" ? Math.abs(size) : 10;","  return function (count) {","    if (typeof count === \"number\") {","      var acc = [];","      count = Math.abs(count);","      for (var i = 0; i < count; i++) {","        acc.push(arb.generator(size));","      }","      return acc;","    } else {","      return arb.generator(size);","    }","  };","}","","/**","  - `throws(block: () -> a, error: class?, message: string?): bool`","","    Executes nullary function `block`. Returns `true` if `block` throws. See [assert.throws](https://nodejs.org/api/assert.html#assert_assert_throws_block_error_message)","*/","function throws(block, error, message) {","  assert(error === undefined || typeof error === \"function\", \"throws: error parameter must be a constructor\");","  assert(message === undefined || typeof message === \"string\", \"throws: message parameter must be a string\");","","  try {","    block();","    return false;","  } catch (e) {","    if (error !== undefined) {","      if (e instanceof error) {","        return message === undefined || e.message === message;","      } else {","        return false;","      }","    } else {","      return true;","    }","  }","}","","/**","  - `assertForall(arbs: arbitrary a ..., userenv: (map arbitrary)?, prop : a -> property): void`","","     Combines 'assert' and 'forall'.","     Constructs a property with forall from arguments, then throws an exception if the property doesn't hold.","     Options for 'assert' cannot be set here - use assert(forall(...)) if you need that.","*/","function assertForall() {","  return checkThrow(forall.apply(null, arguments));","}","","/**","  - `checkForall(arbs: arbitrary a ..., userenv: (map arbitrary)?, prop : a -> property): result`","","    Combines 'check' and 'forall'.","    Constructs a property with forall from arguments, and returns a value based on if the property holds or not.","    See 'check' for description of return value.","","    Options for 'check' cannot be set here - use check(forall(...)) if you need that.","*/","function checkForall() {","  return check(forall.apply(null, arguments));","}","","/**","  ### Types","","  - `generator a` is a function `(size: nat) -> a`.","  - `show` is a function `a -> string`.","  - `shrink` is a function `a -> [a]`, returning *smaller* values.","  - `arbitrary a` is a triple of generator, shrink and show functions.","      - `{ generator: nat -> a, shrink : a -> array a, show: a -> string }`","","  ### Blessing","","  We chose to represent generators and shrinks by functions, yet we would","  like to have additional methods on them. Thus we *bless* objects with","  additional properties.","","  Usually you don't need to bless anything explicitly, as all combinators","  return blessed values.","","  See [perldoc for bless](http://perldoc.perl.org/functions/bless.html).","*/","","/// include ./typify.js","/// include ./arbitraryBless.js","/// include ./bless.js","/// include ./primitive.js","/// include ./arbitrary.js","/// include ./recordWithEnv.js","/// include ./record.js","/// include ./string.js","/// include ./fn.js","/// include ./small.js","/// include ./generator.js","/// include ./shrink.js","/// include ./show.js","/// include ./random.js","/// include ./either.js","/// include ./utils.js","","// Export","var jsc = {","  forall: forall,","  check: check,","  assert: checkThrow,","  assertForall: assertForall,","  checkForall: checkForall,","  property: bddProperty,","  sampler: sampler,","  throws: throws,","","  // generators","  fn: fn.fn,","  fun: fn.fn,","  suchthat: suchthat.suchthat,","","  // either","  left: either.left,","  right: either.right,","","  // sum","  addend: sum.addend,","","  // compile","  compile: compile,","","  generator: api.generator,","  shrink: api.shrink,","","  // internal utility lib","  random: random,","","  show: show,","  utils: utils,","  _: {","    FMap: FMap,","  },","};","","/* primitives */","/* eslint-disable guard-for-in */","for (var k in api.arbitrary) {","  jsc[k] = api.arbitrary[k];","}","/* eslint-enable guard-for-in */","","module.exports = jsc;","","/// plain ../FAQ.md","/// plain ../CONTRIBUTING.md","/// plain ../CHANGELOG.md","/// plain ../related-work.md","/// plain ../LICENSE",""],"l":{"119":1,"120":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"140":1,"141":0,"142":0,"143":0,"145":0,"146":0,"148":0,"150":0,"151":0,"152":0,"153":0,"157":0,"158":0,"159":0,"165":0,"167":0,"172":1,"173":0,"184":1,"185":0,"186":0,"187":0,"188":0,"190":0,"192":0,"193":0,"194":0,"196":0,"199":0,"202":0,"203":0,"204":0,"207":0,"209":1,"210":0,"212":0,"213":0,"214":0,"215":0,"216":0,"218":0,"219":0,"220":0,"222":0,"223":0,"233":0,"238":0,"239":0,"240":0,"241":0,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"256":0,"259":0,"262":1,"263":0,"264":0,"265":0,"288":1,"289":0,"290":0,"291":0,"292":0,"294":0,"296":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"307":1,"308":0,"309":0,"310":0,"313":0,"316":0,"318":0,"319":0,"320":0,"322":0,"324":0,"325":0,"327":0,"332":0,"333":0,"334":0,"336":0,"339":0,"348":1,"349":0,"350":0,"351":0,"354":0,"355":0,"356":0,"357":0,"358":0,"360":0,"384":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"398":0,"399":0,"400":0,"411":1,"412":0,"413":0,"436":1,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"445":0,"447":0,"457":1,"458":0,"459":0,"461":0,"462":0,"463":0,"465":0,"466":0,"467":0,"469":0,"472":0,"484":1,"485":0,"497":1,"498":0,"540":1,"580":1,"581":36,"585":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/api.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/api.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":14,"16":1,"17":6,"18":1,"19":8,"20":1,"21":12,"22":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":50}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"12":{"start":{"line":15,"column":0},"end":{"line":43,"column":2}},"13":{"start":{"line":47,"column":0},"end":{"line":47,"column":6}},"14":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}},"16":{"start":{"line":51,"column":0},"end":{"line":53,"column":1}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"18":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":28}},"20":{"start":{"line":57,"column":0},"end":{"line":59,"column":1}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":34}},"22":{"start":{"line":60,"column":0},"end":{"line":60,"column":21}}},"branchMap":{},"code":["\"use strict\";","","var arbitrary = require(\"./arbitrary.js\");","var bless = require(\"./bless.js\");","var dict = require(\"./dict.js\");","var generator = require(\"./generator.js\");","var json = require(\"./json.js\");","var primitive = require(\"./primitive.js\");","var record = require(\"./record.js\");","var recordWithEnv = require(\"./recordWithEnv.js\");","var shrink = require(\"./shrink.js\");","var small = require(\"./small.js\");","var string = require(\"./string.js\");","","var api = {","  arbitrary: {","    small: small.arbitrary,","    bless: bless,","    record: recordWithEnv,","    nonshrink: arbitrary.nonshrink,","    pair: arbitrary.pair,","    either: arbitrary.either,","    unit: arbitrary.unit,","    dict: arbitrary.dict,","    json: arbitrary.json,","    nearray: arbitrary.nearray,","    array: arbitrary.array,","    tuple: arbitrary.tuple,","    sum: arbitrary.sum,","    oneof: arbitrary.oneof,","    recursive: arbitrary.recursive,","    letrec: arbitrary.letrec,","  },","  generator: {","    dict: dict.generator,","    json: json.json.generator,","    small: small.generator,","    record: record.generator,","  },","  shrink: {","    record: record.shrink,","  },","};","","// Re-export stuff from internal modules","/* eslint-disable guard-for-in */","var k;","for (k in primitive) {","  api.arbitrary[k] = primitive[k];","}","for (k in string) {","  api.arbitrary[k] = string[k];","}","for (k in shrink) {","  api.shrink[k] = shrink[k];","}","for (k in generator) {","  api.generator[k] = generator[k];","}","module.exports = api;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"47":1,"48":1,"49":14,"51":1,"52":6,"54":1,"55":8,"57":1,"58":12,"60":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitrary.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitrary.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"nonshrink","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":24}}},"2":{"name":"either","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":22}}},"3":{"name":"pairArb","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":23}}},"4":{"name":"tuple","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":21}}},"5":{"name":"sum","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":19}}},"6":{"name":"dictArb","line":98,"loc":{"start":{"line":98,"column":0},"end":{"line":98,"column":22}}},"7":{"name":"arrayArb","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":23}}},"8":{"name":"nearrayArb","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":25}}},"9":{"name":"oneof","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":17}}},"10":{"name":"(anonymous_10)","line":133,"loc":{"start":{"line":133,"column":15},"end":{"line":133,"column":28}}},"11":{"name":"lazyArbitrary","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":25}}},"12":{"name":"(anonymous_12)","line":160,"loc":{"start":{"line":160,"column":34},"end":{"line":160,"column":50}}},"13":{"name":"letrec","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":28}}},"14":{"name":"tie","line":194,"loc":{"start":{"line":194,"column":2},"end":{"line":194,"column":21}}},"15":{"name":"(anonymous_15)","line":203,"loc":{"start":{"line":203,"column":32},"end":{"line":203,"column":47}}},"16":{"name":"recursive","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":214,"column":31}}},"17":{"name":"(anonymous_17)","line":216,"loc":{"start":{"line":216,"column":13},"end":{"line":216,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"12":{"start":{"line":25,"column":0},"end":{"line":33,"column":1}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":25}},"14":{"start":{"line":28,"column":2},"end":{"line":32,"column":5}},"15":{"start":{"line":38,"column":0},"end":{"line":42,"column":3}},"16":{"start":{"line":47,"column":0},"end":{"line":59,"column":1}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":34}},"18":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"21":{"start":{"line":54,"column":2},"end":{"line":58,"column":5}},"22":{"start":{"line":66,"column":0},"end":{"line":68,"column":1}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":51}},"24":{"start":{"line":73,"column":0},"end":{"line":80,"column":1}},"25":{"start":{"line":74,"column":2},"end":{"line":74,"column":31}},"26":{"start":{"line":75,"column":2},"end":{"line":79,"column":5}},"27":{"start":{"line":85,"column":0},"end":{"line":92,"column":1}},"28":{"start":{"line":86,"column":2},"end":{"line":86,"column":31}},"29":{"start":{"line":87,"column":2},"end":{"line":91,"column":5}},"30":{"start":{"line":98,"column":0},"end":{"line":100,"column":1}},"31":{"start":{"line":99,"column":2},"end":{"line":99,"column":42}},"32":{"start":{"line":105,"column":0},"end":{"line":107,"column":1}},"33":{"start":{"line":106,"column":2},"end":{"line":106,"column":39}},"34":{"start":{"line":112,"column":0},"end":{"line":114,"column":1}},"35":{"start":{"line":113,"column":2},"end":{"line":113,"column":41}},"36":{"start":{"line":121,"column":0},"end":{"line":121,"column":24}},"37":{"start":{"line":128,"column":0},"end":{"line":151,"column":1}},"38":{"start":{"line":129,"column":2},"end":{"line":129,"column":75}},"39":{"start":{"line":132,"column":2},"end":{"line":132,"column":22}},"40":{"start":{"line":133,"column":2},"end":{"line":135,"column":4}},"41":{"start":{"line":134,"column":4},"end":{"line":134,"column":46}},"42":{"start":{"line":136,"column":2},"end":{"line":143,"column":3}},"43":{"start":{"line":137,"column":4},"end":{"line":137,"column":27}},"44":{"start":{"line":138,"column":4},"end":{"line":142,"column":5}},"45":{"start":{"line":139,"column":6},"end":{"line":139,"column":26}},"46":{"start":{"line":141,"column":6},"end":{"line":141,"column":18}},"47":{"start":{"line":145,"column":2},"end":{"line":150,"column":5}},"48":{"start":{"line":156,"column":0},"end":{"line":167,"column":1}},"49":{"start":{"line":157,"column":2},"end":{"line":157,"column":15}},"50":{"start":{"line":160,"column":2},"end":{"line":162,"column":5}},"51":{"start":{"line":161,"column":4},"end":{"line":161,"column":38}},"52":{"start":{"line":163,"column":2},"end":{"line":163,"column":27}},"53":{"start":{"line":164,"column":2},"end":{"line":164,"column":22}},"54":{"start":{"line":165,"column":2},"end":{"line":165,"column":28}},"55":{"start":{"line":166,"column":2},"end":{"line":166,"column":13}},"56":{"start":{"line":189,"column":0},"end":{"line":212,"column":1}},"57":{"start":{"line":192,"column":2},"end":{"line":192,"column":20}},"58":{"start":{"line":194,"column":2},"end":{"line":199,"column":3}},"59":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"60":{"start":{"line":196,"column":6},"end":{"line":196,"column":39}},"61":{"start":{"line":198,"column":4},"end":{"line":198,"column":26}},"62":{"start":{"line":201,"column":2},"end":{"line":201,"column":35}},"63":{"start":{"line":203,"column":2},"end":{"line":209,"column":5}},"64":{"start":{"line":204,"column":4},"end":{"line":204,"column":36}},"65":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"66":{"start":{"line":206,"column":6},"end":{"line":206,"column":58}},"67":{"start":{"line":208,"column":4},"end":{"line":208,"column":37}},"68":{"start":{"line":211,"column":2},"end":{"line":211,"column":20}},"69":{"start":{"line":214,"column":0},"end":{"line":231,"column":1}},"70":{"start":{"line":215,"column":2},"end":{"line":215,"column":28}},"71":{"start":{"line":216,"column":2},"end":{"line":223,"column":4}},"72":{"start":{"line":217,"column":4},"end":{"line":221,"column":7}},"73":{"start":{"line":222,"column":4},"end":{"line":222,"column":34}},"74":{"start":{"line":225,"column":2},"end":{"line":225,"column":44}},"75":{"start":{"line":226,"column":2},"end":{"line":230,"column":5}},"76":{"start":{"line":233,"column":0},"end":{"line":247,"column":2}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":18},"end":{"line":48,"column":19}},{"start":{"line":48,"column":23},"end":{"line":48,"column":32}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":18},"end":{"line":49,"column":19}},{"start":{"line":49,"column":23},"end":{"line":49,"column":32}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":19},"end":{"line":67,"column":20}},{"start":{"line":67,"column":24},"end":{"line":67,"column":33}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":35},"end":{"line":67,"column":36}},{"start":{"line":67,"column":40},"end":{"line":67,"column":49}}]},"5":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":24},"end":{"line":99,"column":27}},{"start":{"line":99,"column":31},"end":{"line":99,"column":40}}]},"6":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":21},"end":{"line":106,"column":24}},{"start":{"line":106,"column":28},"end":{"line":106,"column":37}}]},"7":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":23},"end":{"line":113,"column":26}},{"start":{"line":113,"column":30},"end":{"line":113,"column":39}}]},"8":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"9":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"10":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]}},"code":["/* @flow weak */","\"use strict\";","","var arbitraryAssert = require(\"./arbitraryAssert.js\");","var arbitraryBless = require(\"./arbitraryBless.js\");","var array = require(\"./array.js\");","var assert = require(\"assert\");","var dict = require(\"./dict.js\");","var generator = require(\"./generator.js\");","var json = require(\"./json.js\");","var pair = require(\"./pair.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var utils = require(\"./utils.js\");","","/**","  ### Arbitrary combinators","*/","","/**","  - `nonshrink(arb: arbitrary a): arbitrary a`","","      Non shrinkable version of arbitrary `arb`.","*/","function nonshrink(arb) {","  arb = utils.force(arb);","","  return arbitraryBless({","    generator: arb.generator,","    shrink: shrink.noop,","    show: arb.show,","  });","}","","/**","  - `unit: arbitrary ()`","*/","var unit = arbitraryBless({","  generator: generator.unit,","  shrink: shrink.noop,","  show: show.def,","});","","/**","  - `either(arbA: arbitrary a, arbB : arbitrary b): arbitrary (either a b)`","*/","function either(a, b) {","  a = utils.force(a || json.json);","  b = utils.force(b || json.json);","","  arbitraryAssert(a);","  arbitraryAssert(b);","","  return arbitraryBless({","    generator: generator.either(a.generator, b.generator),","    shrink: shrink.either(a.shrink, b.shrink),","    show: show.either(a.show, b.show),","  });","}","","/**","  - `pair(arbA: arbitrary a, arbB : arbitrary b): arbitrary (pair a b)`","","      If not specified `a` and `b` are equal to `value()`.","*/","function pairArb(a, b) {","  return pair.pair(a || json.json, b || json.json);","}","","/**","  - `tuple(arbs: (arbitrary a, arbitrary b...)): arbitrary (a, b...)`","*/","function tuple(arbs) {","  arbs = arbs.map(utils.force);","  return arbitraryBless({","    generator: generator.tuple(utils.pluck(arbs, \"generator\")),","    shrink: shrink.tuple(utils.pluck(arbs, \"shrink\")),","    show: show.tuple(utils.pluck(arbs, \"show\")),","  });","}","","/**","  - `sum(arbs: (arbitrary a, arbitrary b...)): arbitrary (a | b ...)`","*/","function sum(arbs) {","  arbs = arbs.map(utils.force);","  return arbitraryBless({","    generator: generator.sum(utils.pluck(arbs, \"generator\")),","    shrink: shrink.sum(utils.pluck(arbs, \"shrink\")),","    show: show.sum(utils.pluck(arbs, \"show\")),","  });","}","/**","  - `dict(arb: arbitrary a): arbitrary (dict a)`","","      Generates a JavaScript object with properties of type `A`.","*/","function dictArb(arb) {","  return dict.arbitrary(arb || json.json);","}","","/**","  - `array(arb: arbitrary a): arbitrary (array a)`","*/","function arrayArb(arb) {","  return array.array(arb || json.json);","}","","/**","  - `nearray(arb: arbitrary a): arbitrary (array a)`","*/","function nearrayArb(arb) {","  return array.nearray(arb || json.json);","}","","/**","  - `json: arbitrary json`","","       JavaScript Objects: boolean, number, string, null, array of `json` values or object with `json` values.","*/","var jsonArb = json.json;","","/**","  - `oneof(gs : array (arbitrary a)...) : arbitrary a`","","      Randomly uses one of the given arbitraries.","*/","function oneof() {","  assert(arguments.length !== 0, \"oneof: at least one parameter expected\");","","  // TODO: write this in more functional way","  var generators = [];","  var append = function (a) {","    generators.push(utils.force(a).generator);","  };","  for (var i = 0; i < arguments.length; i++) {","    var arg = arguments[i];","    if (utils.isArray(arg)) {","      arg.forEach(append);","    } else {","      append(arg);","    }","  }","","  return arbitraryBless({","    generator: generator.oneof(generators),","    // TODO: make shrink","    shrink: shrink.noop,","    show: show.def,","  });","}","","// Return a lazy arbitrary that delegates to another arbitrary at its","// 'strict' property. An arbitrary must be assigned to that property before","// this arbitrary can generate anything.","function lazyArbitrary() {","  var arb = {};","  // This function must be pure because it will not be called with","  // meaningful context.","  arb.generator = generator.bless(function (size) {","    return arb.strict.generator(size);","  });","  arb.shrink = shrink.noop;","  arb.show = show.def;","  arb = arbitraryBless(arb);","  return arb;","}","","/**","  - ```js","    letrec(","      (tie: key -> (arbitrary a | arbitrary b | ...))","      -> { key: arbitrary a, key: arbitrary b, ... }):","    { key: arbitrary a, key: arbitrary b, ... }","    ```","","    Mutually recursive definitions. Every reference to a sibling arbitrary","    should go through the `tie` function.","","    ```js","    { arb1, arb2 } = jsc.letrec(function (tie) {","      return {","        arb1: jsc.tuple(jsc.int, jsc.oneof(jsc.const(null), tie(\"arb2\"))),","        arb2: jsc.tuple(jsc.bool, jsc.oneof(jsc.const(null), tie(\"arb1\"))),","      }","    });","    ```","*/","function letrec(definition) {","  // We must use a lazy dictionary because we do not know the key set","  // before calling the definition.","  var lazyArbs = {};","","  function tie(name) {","    if (!lazyArbs.hasOwnProperty(name)) {","      lazyArbs[name] = lazyArbitrary();","    }","    return lazyArbs[name];","  }","","  var strictArbs = definition(tie);","","  Object.keys(lazyArbs).forEach(function (key) {","    var strictArb = strictArbs[key];","    if (!strictArb) {","      throw new Error(\"undefined lazy arbitrary: \" + key);","    }","    lazyArbs[key].strict = strictArb;","  });","","  return strictArbs;","}","","function recursive(arbZ, arbS) {","  var genZ = arbZ.generator;","  var genS = function (recGen) {","    var recArb = arbitraryBless({","      generator: recGen,","      shrink: shrink.noop,","      show: show.def,","    });","    return arbS(recArb).generator;","  };","","  var gen = generator.recursive(genZ, genS);","  return arbitraryBless({","    generator: gen,","    shrink: shrink.noop,","    show: show.def,","  });","}","","module.exports = {","  nonshrink: nonshrink,","  pair: pairArb,","  either: either,","  unit: unit,","  dict: dictArb,","  json: jsonArb,","  nearray: nearrayArb,","  array: arrayArb,","  tuple: tuple,","  sum: sum,","  oneof: oneof,","  recursive: recursive,","  letrec: letrec,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"25":1,"26":0,"28":0,"38":1,"47":1,"48":0,"49":0,"51":0,"52":0,"54":0,"66":1,"67":0,"73":1,"74":0,"75":0,"85":1,"86":0,"87":0,"98":1,"99":0,"105":1,"106":0,"112":1,"113":0,"121":1,"128":1,"129":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"141":0,"145":0,"156":1,"157":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"189":1,"192":0,"194":1,"195":0,"196":0,"198":0,"201":0,"203":0,"204":0,"205":0,"206":0,"208":0,"211":0,"214":1,"215":0,"216":0,"217":0,"222":0,"225":0,"226":0,"233":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitraryAssert.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitraryAssert.js","s":{"1":1,"2":1,"3":4,"4":4,"5":4,"6":4,"7":4,"8":1},"b":{"1":[4,4,4],"2":[4,4],"3":[4,4]},"f":{"1":4},"fnMap":{"1":{"name":"arbitraryAssert","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":98}},"4":{"start":{"line":7,"column":2},"end":{"line":8,"column":42}},"5":{"start":{"line":9,"column":2},"end":{"line":10,"column":39}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":74}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":74}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":9},"end":{"line":6,"column":26}},{"start":{"line":6,"column":30},"end":{"line":6,"column":42}},{"start":{"line":6,"column":46},"end":{"line":6,"column":69}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":9},"end":{"line":7,"column":44}},{"start":{"line":7,"column":48},"end":{"line":7,"column":87}}]},"3":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":9},"end":{"line":9,"column":41}},{"start":{"line":9,"column":45},"end":{"line":9,"column":82}}]}},"code":["\"use strict\";","","var assert = require(\"assert\");","","function arbitraryAssert(arb) {","  assert(arb !== undefined && arb !== null && typeof arb === \"object\", \"arb should be an object\");","  assert(typeof arb.generator === \"function\" && typeof arb.generator.map === \"function\",","    \"arb.generator should be a function\");","  assert(typeof arb.shrink === \"function\" && typeof arb.shrink.smap === \"function\",","    \"arb.shrink should be a function\");","  assert(typeof arb.show === \"function\", \"arb.show should be a function\");","  assert(typeof arb.smap === \"function\", \"arb.smap should be a function\");","}","","module.exports = arbitraryAssert;",""],"l":{"3":1,"5":1,"6":4,"7":4,"9":4,"11":4,"12":4,"15":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitraryBless.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/arbitraryBless.js","s":{"1":1,"2":1,"3":10,"4":10,"5":1,"6":31,"7":31,"8":1},"b":{"1":[10,10]},"f":{"1":10,"2":31},"fnMap":{"1":{"name":"arbitraryProtoSMap","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}}},"2":{"name":"arbitraryBless","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":11,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"4":{"start":{"line":14,"column":2},"end":{"line":18,"column":5}},"5":{"start":{"line":52,"column":0},"end":{"line":55,"column":1}},"6":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"7":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}},"8":{"start":{"line":57,"column":0},"end":{"line":57,"column":32}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":10},"end":{"line":17,"column":17}},{"start":{"line":17,"column":21},"end":{"line":17,"column":29}}]}},"code":["\"use strict\";","","var show = require(\"./show.js\");","","/**","  ### Arbitrary data","*/","","// Blessing: i.e adding prototype","/* eslint-disable no-use-before-define */","function arbitraryProtoSMap(f, g, newShow) {","  /* jshint validthis:true */","  var arb = this; // eslint-disable-line no-invalid-this","  return arbitraryBless({","    generator: arb.generator.map(f),","    shrink: arb.shrink.smap(f, g),","    show: newShow || show.def,","  });","}","/* eslint-enable no-use-before-define */","","/**","  - `.smap(f: a -> b, g: b -> a, newShow: (b -> string)?): arbitrary b`","","      Transform `arbitrary a` into `arbitrary b`. For example:","","      `g` should be a [right inverse](http://en.wikipedia.org/wiki/Surjective_function#Surjections_as_right_invertible_functions) of `f`, but doesn't need to be complete inverse.","      i.e. i.e. `f` doesn't need to be invertible, only surjective.","","      ```js","      var positiveIntegersArb = nat.smap(","        function (x) { return x + 1; },","        function (x) { return x - 1; });","      ```","","      ```js","      var setNatArb =  jsc.array(jsc.nat).smap(_.uniq, _.identity);","      ```","","      Right inverse means that *f(g(y)) = y* for all *y* in *Y*. Here *Y* is a type of **arrays of unique natural numbers**. For them","      ```js","      _.uniq(_.identity(y)) = _.uniq(y) = y","      ```","","      Opposite: *g(f(x))* for all *x* in *X*, doesn't need to hold. *X* is **arrays of natural numbers**:","      ```js","      _.identity(_uniq([0, 0])) = [0]] != [0, 0]","      ```","","      We need an inverse for shrinking, and there right inverse is enough. We can always *pull back* `smap`ped value, shrink the preimage, and *map* or *push forward* shrunken preimages again.","*/","function arbitraryBless(arb) {","  arb.smap = arbitraryProtoSMap;","  return arb;","}","","module.exports = arbitraryBless;",""],"l":{"3":1,"11":1,"13":10,"14":10,"52":1,"53":31,"54":31,"57":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/show.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/show.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":4,"30":0,"31":4,"32":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":4,"14":0},"fnMap":{"1":{"name":"showDef","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}}},"2":{"name":"showPair","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":28}}},"4":{"name":"showEither","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"5":{"name":"showLeft","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}}},"6":{"name":"showRight","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":28}}},"7":{"name":"(anonymous_7)","line":43,"loc":{"start":{"line":43,"column":15},"end":{"line":43,"column":28}}},"8":{"name":"showTuple","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":26}}},"9":{"name":"(anonymous_9)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":31}}},"10":{"name":"showSum","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":24}}},"11":{"name":"(anonymous_11)","line":69,"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":30}}},"12":{"name":"(anonymous_12)","line":70,"loc":{"start":{"line":70,"column":20},"end":{"line":70,"column":45}}},"13":{"name":"showArray","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":25}}},"14":{"name":"(anonymous_14)","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":30}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":29}},"4":{"start":{"line":23,"column":0},"end":{"line":29,"column":1}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":4}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":56}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":43}},"8":{"start":{"line":34,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":40}},"11":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":41}},"13":{"start":{"line":43,"column":2},"end":{"line":45,"column":4}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":41}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":43}},"16":{"start":{"line":53,"column":0},"end":{"line":63,"column":1}},"17":{"start":{"line":54,"column":2},"end":{"line":60,"column":4}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":18}},"19":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"20":{"start":{"line":57,"column":6},"end":{"line":57,"column":35}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":27}},"22":{"start":{"line":62,"column":2},"end":{"line":62,"column":43}},"23":{"start":{"line":68,"column":0},"end":{"line":76,"column":1}},"24":{"start":{"line":69,"column":2},"end":{"line":73,"column":4}},"25":{"start":{"line":70,"column":4},"end":{"line":72,"column":7}},"26":{"start":{"line":71,"column":6},"end":{"line":71,"column":69}},"27":{"start":{"line":75,"column":2},"end":{"line":75,"column":43}},"28":{"start":{"line":81,"column":0},"end":{"line":87,"column":1}},"29":{"start":{"line":82,"column":2},"end":{"line":84,"column":4}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":48}},"31":{"start":{"line":86,"column":2},"end":{"line":86,"column":43}},"32":{"start":{"line":89,"column":0},"end":{"line":96,"column":2}}},"branchMap":{},"code":["","/* @flow weak */","\"use strict\";","","/**","  ### Show functions","*/","","var utils = require(\"./utils.js\");","","/**","  - `show.def(x : a): string`","","      Currently implemented as `JSON.stringify`.","*/","function showDef(obj) {","  return JSON.stringify(obj);","}","","/**","  - `show.pair(showA: a -> string, showB: b -> string, x: (a, b)): string`","*/","function showPair(showA, showB) {","  var result = function (p) {","    return \"(\" + showA(p[0]) + \", \" + showB(p[1]) + \")\";","  };","","  return utils.curried3(result, arguments);","}","","/**","  - `show.either(showA: a -> string, showB: b -> string, e: either a b): string`","*/","function showEither(showA, showB) {","  function showLeft(value) {","    return \"Left(\" + showA(value) + \")\";","  }","","  function showRight(value) {","    return \"Right(\" + showB(value) + \")\";","  }","","  var result = function (e) {","    return e.either(showLeft, showRight);","  };","","  return utils.curried3(result, arguments);","}","","/**","  - `show.tuple(shrinks: (a -> string, b -> string...), x: (a, b...)): string`","*/","function showTuple(shows) {","  var result = function (objs) {","    var strs = [];","    for (var i = 0; i < shows.length; i++) {","      strs.push(shows[i](objs[i]));","    }","    return strs.join(\"; \");","  };","","  return utils.curried2(result, arguments);","}","","/**","  - `show.sum(shrinks: (a -> string, b -> string...), x: (a | b ...)): string`","*/","function showSum(shows) {","  var result = function (sum) {","    return sum.fold(function (idx, n, value) {","      return \"Sum(\" + idx + \"/\" + n + \": \" + shows[idx](value) + \")\";","    });","  };","","  return utils.curried2(result, arguments);","}","","/**","  - `show.array(shrink: a -> string, x: array a): string`","*/","function showArray(show) {","  var result = function (arr) {","    return \"[\" + arr.map(show).join(\", \") + \"]\";","  };","","  return utils.curried2(result, arguments);","}","","module.exports = {","  def: showDef,","  pair: showPair,","  either: showEither,","  tuple: showTuple,","  sum: showSum,","  array: showArray,","};",""],"l":{"9":1,"16":1,"17":0,"23":1,"24":0,"25":0,"28":0,"34":1,"35":1,"36":0,"39":1,"40":0,"43":0,"44":0,"47":0,"53":1,"54":0,"55":0,"56":0,"57":0,"59":0,"62":0,"68":1,"69":0,"70":0,"71":0,"75":0,"81":1,"82":4,"83":0,"86":4,"89":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/utils.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":1,"69":0,"70":0,"71":1,"72":4,"73":1,"74":1,"75":1,"76":3,"77":3,"78":3,"79":31,"80":31,"81":1,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":1,"89":2,"90":2,"91":15,"92":0,"93":15,"94":1,"95":1,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,4],"30":[0,0],"31":[0,15],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":0,"13":0,"14":0,"15":2,"16":15,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"isObject","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":21}}},"2":{"name":"isNaN","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}}},"3":{"name":"sort","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":19}}},"4":{"name":"isEqual","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":23}}},"5":{"name":"isApproxEqual","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":35}}},"6":{"name":"loop","line":92,"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":25}}},"7":{"name":"identity","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":21}}},"8":{"name":"pluck","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":25}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":17},"end":{"line":155,"column":30}}},"10":{"name":"force","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":20}}},"11":{"name":"merge","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":17}}},"12":{"name":"div2","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":17}}},"13":{"name":"log2","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":17}}},"14":{"name":"ilog2","line":197,"loc":{"start":{"line":197,"column":0},"end":{"line":197,"column":18}}},"15":{"name":"curriedN","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":21}}},"16":{"name":"curriedNInstance","line":203,"loc":{"start":{"line":203,"column":9},"end":{"line":203,"column":49}}},"17":{"name":"charArrayToString","line":215,"loc":{"start":{"line":215,"column":0},"end":{"line":215,"column":32}}},"18":{"name":"stringToCharArray","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":32}}},"19":{"name":"pairArrayToDict","line":223,"loc":{"start":{"line":223,"column":0},"end":{"line":223,"column":39}}},"20":{"name":"(anonymous_20)","line":225,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":36}}},"21":{"name":"dictToPairArray","line":231,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":28}}},"22":{"name":"(anonymous_22)","line":233,"loc":{"start":{"line":233,"column":25},"end":{"line":233,"column":38}}},"23":{"name":"partition","line":239,"loc":{"start":{"line":239,"column":0},"end":{"line":239,"column":30}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"4":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":42}},"6":{"start":{"line":26,"column":0},"end":{"line":30,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":13}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":13}},"10":{"start":{"line":37,"column":0},"end":{"line":69,"column":1}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":8}},"12":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"14":{"start":{"line":44,"column":2},"end":{"line":66,"column":3}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"16":{"start":{"line":46,"column":9},"end":{"line":66,"column":3}},"17":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"18":{"start":{"line":48,"column":6},"end":{"line":50,"column":7}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":21}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"21":{"start":{"line":53,"column":9},"end":{"line":66,"column":3}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":31}},"23":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"24":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"25":{"start":{"line":57,"column":6},"end":{"line":57,"column":19}},"26":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"27":{"start":{"line":61,"column":6},"end":{"line":63,"column":7}},"28":{"start":{"line":62,"column":8},"end":{"line":62,"column":21}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"30":{"start":{"line":68,"column":2},"end":{"line":68,"column":15}},"31":{"start":{"line":84,"column":0},"end":{"line":148,"column":1}},"32":{"start":{"line":85,"column":2},"end":{"line":85,"column":20}},"33":{"start":{"line":86,"column":2},"end":{"line":86,"column":39}},"34":{"start":{"line":87,"column":2},"end":{"line":87,"column":30}},"35":{"start":{"line":90,"column":2},"end":{"line":90,"column":17}},"36":{"start":{"line":92,"column":2},"end":{"line":146,"column":3}},"37":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"38":{"start":{"line":94,"column":6},"end":{"line":94,"column":18}},"39":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"40":{"start":{"line":99,"column":6},"end":{"line":99,"column":18}},"41":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"42":{"start":{"line":104,"column":6},"end":{"line":104,"column":18}},"43":{"start":{"line":107,"column":4},"end":{"line":107,"column":10}},"44":{"start":{"line":110,"column":4},"end":{"line":114,"column":5}},"45":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"46":{"start":{"line":112,"column":8},"end":{"line":112,"column":20}},"47":{"start":{"line":117,"column":4},"end":{"line":117,"column":23}},"48":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"49":{"start":{"line":120,"column":6},"end":{"line":120,"column":21}},"50":{"start":{"line":123,"column":4},"end":{"line":143,"column":5}},"51":{"start":{"line":124,"column":6},"end":{"line":128,"column":7}},"52":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"53":{"start":{"line":126,"column":10},"end":{"line":126,"column":23}},"54":{"start":{"line":129,"column":6},"end":{"line":129,"column":18}},"55":{"start":{"line":130,"column":11},"end":{"line":143,"column":5}},"56":{"start":{"line":131,"column":6},"end":{"line":131,"column":33}},"57":{"start":{"line":132,"column":6},"end":{"line":132,"column":33}},"58":{"start":{"line":133,"column":6},"end":{"line":135,"column":7}},"59":{"start":{"line":134,"column":8},"end":{"line":134,"column":21}},"60":{"start":{"line":137,"column":6},"end":{"line":141,"column":7}},"61":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"62":{"start":{"line":139,"column":10},"end":{"line":139,"column":23}},"63":{"start":{"line":142,"column":6},"end":{"line":142,"column":18}},"64":{"start":{"line":145,"column":4},"end":{"line":145,"column":17}},"65":{"start":{"line":147,"column":2},"end":{"line":147,"column":23}},"66":{"start":{"line":150,"column":0},"end":{"line":152,"column":1}},"67":{"start":{"line":151,"column":2},"end":{"line":151,"column":11}},"68":{"start":{"line":154,"column":0},"end":{"line":158,"column":1}},"69":{"start":{"line":155,"column":2},"end":{"line":157,"column":5}},"70":{"start":{"line":156,"column":4},"end":{"line":156,"column":18}},"71":{"start":{"line":165,"column":0},"end":{"line":167,"column":1}},"72":{"start":{"line":166,"column":2},"end":{"line":166,"column":51}},"73":{"start":{"line":174,"column":0},"end":{"line":187,"column":1}},"74":{"start":{"line":175,"column":2},"end":{"line":175,"column":15}},"75":{"start":{"line":177,"column":2},"end":{"line":184,"column":3}},"76":{"start":{"line":178,"column":4},"end":{"line":178,"column":27}},"77":{"start":{"line":179,"column":4},"end":{"line":179,"column":32}},"78":{"start":{"line":180,"column":4},"end":{"line":183,"column":5}},"79":{"start":{"line":181,"column":6},"end":{"line":181,"column":24}},"80":{"start":{"line":182,"column":6},"end":{"line":182,"column":26}},"81":{"start":{"line":186,"column":2},"end":{"line":186,"column":13}},"82":{"start":{"line":189,"column":0},"end":{"line":191,"column":1}},"83":{"start":{"line":190,"column":2},"end":{"line":190,"column":27}},"84":{"start":{"line":193,"column":0},"end":{"line":195,"column":1}},"85":{"start":{"line":194,"column":2},"end":{"line":194,"column":35}},"86":{"start":{"line":197,"column":0},"end":{"line":199,"column":1}},"87":{"start":{"line":198,"column":2},"end":{"line":198,"column":42}},"88":{"start":{"line":201,"column":0},"end":{"line":210,"column":1}},"89":{"start":{"line":202,"column":2},"end":{"line":202,"column":17}},"90":{"start":{"line":203,"column":2},"end":{"line":209,"column":4}},"91":{"start":{"line":204,"column":4},"end":{"line":208,"column":5}},"92":{"start":{"line":205,"column":6},"end":{"line":205,"column":30}},"93":{"start":{"line":207,"column":6},"end":{"line":207,"column":20}},"94":{"start":{"line":212,"column":0},"end":{"line":212,"column":27}},"95":{"start":{"line":213,"column":0},"end":{"line":213,"column":27}},"96":{"start":{"line":215,"column":0},"end":{"line":217,"column":1}},"97":{"start":{"line":216,"column":2},"end":{"line":216,"column":22}},"98":{"start":{"line":219,"column":0},"end":{"line":221,"column":1}},"99":{"start":{"line":220,"column":2},"end":{"line":220,"column":23}},"100":{"start":{"line":223,"column":0},"end":{"line":229,"column":1}},"101":{"start":{"line":224,"column":2},"end":{"line":224,"column":15}},"102":{"start":{"line":225,"column":2},"end":{"line":227,"column":5}},"103":{"start":{"line":226,"column":4},"end":{"line":226,"column":21}},"104":{"start":{"line":228,"column":2},"end":{"line":228,"column":13}},"105":{"start":{"line":231,"column":0},"end":{"line":237,"column":1}},"106":{"start":{"line":232,"column":2},"end":{"line":232,"column":15}},"107":{"start":{"line":233,"column":2},"end":{"line":235,"column":5}},"108":{"start":{"line":234,"column":4},"end":{"line":234,"column":24}},"109":{"start":{"line":236,"column":2},"end":{"line":236,"column":13}},"110":{"start":{"line":239,"column":0},"end":{"line":253,"column":1}},"111":{"start":{"line":240,"column":2},"end":{"line":240,"column":18}},"112":{"start":{"line":241,"column":2},"end":{"line":241,"column":17}},"113":{"start":{"line":243,"column":2},"end":{"line":250,"column":3}},"114":{"start":{"line":244,"column":4},"end":{"line":244,"column":19}},"115":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"116":{"start":{"line":246,"column":6},"end":{"line":246,"column":21}},"117":{"start":{"line":248,"column":6},"end":{"line":248,"column":20}},"118":{"start":{"line":252,"column":2},"end":{"line":252,"column":25}},"119":{"start":{"line":255,"column":0},"end":{"line":273,"column":2}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":9},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":41}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":14}},{"start":{"line":40,"column":18},"end":{"line":40,"column":26}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":9},"end":{"line":46,"column":9}},{"start":{"line":46,"column":9},"end":{"line":46,"column":9}}]},"6":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":13},"end":{"line":46,"column":23}},{"start":{"line":46,"column":27},"end":{"line":46,"column":37}},{"start":{"line":46,"column":41},"end":{"line":46,"column":62}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":9}},{"start":{"line":53,"column":9},"end":{"line":53,"column":9}}]},"9":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":24}},{"start":{"line":53,"column":28},"end":{"line":53,"column":39}},{"start":{"line":53,"column":43},"end":{"line":53,"column":54}},{"start":{"line":53,"column":58},"end":{"line":53,"column":69}}]},"10":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"11":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"12":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":9},"end":{"line":85,"column":13}},{"start":{"line":85,"column":17},"end":{"line":85,"column":19}}]},"13":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":14},"end":{"line":87,"column":24}},{"start":{"line":87,"column":28},"end":{"line":87,"column":29}}]},"14":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"15":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":16}},{"start":{"line":93,"column":20},"end":{"line":93,"column":28}}]},"16":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"17":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"18":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"19":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":27}},{"start":{"line":111,"column":31},"end":{"line":111,"column":48}}]},"20":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"21":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":31}},{"start":{"line":119,"column":35},"end":{"line":119,"column":58}}]},"22":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"23":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":18}},{"start":{"line":123,"column":22},"end":{"line":123,"column":32}},{"start":{"line":123,"column":36},"end":{"line":123,"column":57}}]},"24":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"25":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":11},"end":{"line":130,"column":11}},{"start":{"line":130,"column":11},"end":{"line":130,"column":11}}]},"26":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":15},"end":{"line":130,"column":26}},{"start":{"line":130,"column":30},"end":{"line":130,"column":41}},{"start":{"line":130,"column":45},"end":{"line":130,"column":56}},{"start":{"line":130,"column":60},"end":{"line":130,"column":71}}]},"27":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"28":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"29":{"line":166,"type":"cond-expr","locations":[{"start":{"line":166,"column":39},"end":{"line":166,"column":44}},{"start":{"line":166,"column":47},"end":{"line":166,"column":50}}]},"30":{"line":198,"type":"cond-expr","locations":[{"start":{"line":198,"column":18},"end":{"line":198,"column":19}},{"start":{"line":198,"column":22},"end":{"line":198,"column":41}}]},"31":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"32":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]}},"code":["/* @flow weak */","\"use strict\";","","var isArray = Array.isArray;","function isObject(o) {","  /* eslint-disable no-new-object */","  return new Object(o) === o;","  /* eslint-enable no-new-object */","}","","/* undefined-safe isNaN */","function isNaN(n) {","  return typeof n === \"number\" && n !== n;","}","","/**","  ### Utility functions","","  Utility functions are exposed (and documented) only to make contributions to jsverify more easy.","  The changes here don't follow semver, i.e. there might be backward-incompatible changes even in patch releases.","","  Use [underscore.js](http://underscorejs.org/), [lodash](https://lodash.com/), [ramda](http://ramda.github.io/ramdocs/docs/), [lazy.js](http://danieltao.com/lazy.js/) or some other utility belt.","*/","","/* Simple sort */","function sort(arr) {","  var res = arr.slice();","  res.sort();","  return res;","}","","/**","  - `utils.isEqual(x: json, y: json): bool`","","      Equality test for `json` objects.","*/","function isEqual(a, b) {","  var i;","","  if (isNaN(a) && isNaN(b)) {","    return true;","  }","","  if (a === b) {","    return true;","  } else if (isArray(a) && isArray(b) && a.length === b.length) {","    for (i = 0; i < a.length; i++) {","      if (!isEqual(a[i], b[i])) {","        return false;","      }","    }","    return true;","  } else if (isObject(a) && isObject(b) && !isArray(a) && !isArray(b)) {","    var akeys = Object.keys(a);","    var bkeys = Object.keys(b);","    if (!isEqual(sort(akeys), sort(bkeys))) {","      return false;","    }","","    for (i = 0; i < akeys.length; i++) {","      if (!isEqual(a[akeys[i]], b[akeys[i]])) {","        return false;","      }","    }","    return true;","  }","","  return false;","}","","/**","  - `utils.isApproxEqual(x: a, y: b, opts: obj): bool`","","      Tests whether two objects are approximately and optimistically equal.","      Returns `false` only if they are distinguishable not equal.","      Returns `true` when `x` and `y` are `NaN`.","      This function works with cyclic data.","","      Takes optional 'opts' parameter with properties:","","      - `fnEqual` - whether all functions are considered equal (default: yes)","      - `depth` - how deep to recurse until treating as equal (default: 5)","*/","function isApproxEqual(x, y, opts) {","  opts = opts || {};","  var fnEqual = opts.fnEqual !== false;","  var depth = opts.depth || 5; // totally arbitrary","","  // state contains pairs we checked (or are still checking, but assume equal!)","  var state = [];","","  function loop(a, b, n) {","    if (isNaN(a) && isNaN(b)) {","      return true;","    }","","    // trivial check","    if (a === b) {","      return true;","    }","","    // depth check","    if (n >= depth) {","      return true;","    }","","    var i;","","    // check if pair already occured","    for (i = 0; i < state.length; i++) {","      if (state[i][0] === a && state[i][1] === b) {","        return true;","      }","    }","","    // add to state","    state.push([a, b]);","","    if (typeof a === \"function\" && typeof b === \"function\") {","      return fnEqual;","    }","","    if (isArray(a) && isArray(b) && a.length === b.length) {","      for (i = 0; i < a.length; i++) {","        if (!loop(a[i], b[i], n + 1)) {","          return false;","        }","      }","      return true;","    } else if (isObject(a) && isObject(b) && !isArray(a) && !isArray(b)) {","      var akeys = Object.keys(a);","      var bkeys = Object.keys(b);","      if (!loop(sort(akeys), sort(bkeys), n + 1)) {","        return false;","      }","","      for (i = 0; i < akeys.length; i++) {","        if (!loop(a[akeys[i]], b[akeys[i]], n + 1)) {","          return false;","        }","      }","      return true;","    }","","    return false;","  }","  return loop(x, y, 0);","}","","function identity(x) {","  return x;","}","","function pluck(arr, key) {","  return arr.map(function (e) {","    return e[key];","  });","}","","/**","  - `utils.force(x: a | () -> a) : a`","","      Evaluate `x` as nullary function, if it is one.","*/","function force(arb) {","  return (typeof arb === \"function\") ? arb() : arb;","}","","/**","  - `utils.merge(x... : obj): obj`","","    Merge two objects, a bit like `_.extend({}, x, y)`.","*/","function merge() {","  var res = {};","","  for (var i = 0; i < arguments.length; i++) {","    var arg = arguments[i];","    var keys = Object.keys(arg);","    for (var j = 0; j < keys.length; j++) {","      var key = keys[j];","      res[key] = arg[key];","    }","  }","","  return res;","}","","function div2(x) {","  return Math.floor(x / 2);","}","","function log2(x) {","  return Math.log(x) / Math.log(2);","}","","function ilog2(x) {","  return x <= 0 ? 0 : Math.floor(log2(x));","}","","function curriedN(n) {","  var n1 = n - 1;","  return function curriedNInstance(result, args) {","    if (args.length === n) {","      return result(args[n1]);","    } else {","      return result;","    }","  };","}","","var curried2 = curriedN(2);","var curried3 = curriedN(3);","","function charArrayToString(arr) {","  return arr.join(\"\");","}","","function stringToCharArray(str) {","  return str.split(\"\");","}","","function pairArrayToDict(arrayOfPairs) {","  var res = {};","  arrayOfPairs.forEach(function (p) {","    res[p[0]] = p[1];","  });","  return res;","}","","function dictToPairArray(m) {","  var res = [];","  Object.keys(m).forEach(function (k) {","    res.push([k, m[k]]);","  });","  return res;","}","","function partition(arr, pred) {","  var truthy = [];","  var falsy = [];","","  for (var i = 0; i < arr.length; i++) {","    var x = arr[i];","    if (pred(x)) {","      truthy.push(x);","    } else {","      falsy.push(x);","    }","  }","","  return [truthy, falsy];","}","","module.exports = {","  isArray: isArray,","  isObject: isObject,","  isEqual: isEqual,","  isApproxEqual: isApproxEqual,","  identity: identity,","  pluck: pluck,","  force: force,","  merge: merge,","  div2: div2,","  ilog2: ilog2,","  curried2: curried2,","  curried3: curried3,","  charArrayToString: charArrayToString,","  stringToCharArray: stringToCharArray,","  pairArrayToDict: pairArrayToDict,","  dictToPairArray: dictToPairArray,","  partition: partition,","};",""],"l":{"4":1,"5":1,"7":0,"12":1,"13":0,"26":1,"27":0,"28":0,"29":0,"37":1,"38":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"60":0,"61":0,"62":0,"65":0,"68":0,"84":1,"85":0,"86":0,"87":0,"90":0,"92":1,"93":0,"94":0,"98":0,"99":0,"103":0,"104":0,"107":0,"110":0,"111":0,"112":0,"117":0,"119":0,"120":0,"123":0,"124":0,"125":0,"126":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"137":0,"138":0,"139":0,"142":0,"145":0,"147":0,"150":1,"151":0,"154":1,"155":0,"156":0,"165":1,"166":4,"174":1,"175":1,"177":1,"178":3,"179":3,"180":3,"181":31,"182":31,"186":1,"189":1,"190":0,"193":1,"194":0,"197":1,"198":0,"201":1,"202":2,"203":2,"204":15,"205":0,"207":15,"212":1,"213":1,"215":1,"216":0,"219":1,"220":0,"223":1,"224":0,"225":0,"226":0,"228":0,"231":1,"232":0,"233":0,"234":0,"236":0,"239":1,"240":0,"241":0,"243":0,"244":0,"245":0,"246":0,"248":0,"252":0,"255":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/array.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":4,"10":4,"11":4,"12":1,"13":1,"14":1},"b":{},"f":{"1":2,"2":4},"fnMap":{"1":{"name":"makeArray","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}}},"2":{"name":"arrayImpl","line":11,"loc":{"start":{"line":11,"column":9},"end":{"line":11,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"7":{"start":{"line":10,"column":0},"end":{"line":22,"column":1}},"8":{"start":{"line":11,"column":2},"end":{"line":21,"column":4}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"11":{"start":{"line":16,"column":4},"end":{"line":20,"column":7}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":35}},"14":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}}},"branchMap":{},"code":["\"use strict\";","","var arbitraryAssert = require(\"./arbitraryAssert.js\");","var arbitraryBless = require(\"./arbitraryBless.js\");","var generator = require(\"./generator.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var utils = require(\"./utils.js\");","","function makeArray(flavour) {","  return function arrayImpl(arb) {","    arb = utils.force(arb);","","    arbitraryAssert(arb);","","    return arbitraryBless({","      generator: generator[flavour](arb.generator),","      shrink: shrink[flavour](arb.shrink),","      show: show.array(arb.show),","    });","  };","}","","var array = makeArray(\"array\");","var nearray = makeArray(\"nearray\");","","module.exports = {","  array: array,","  nearray: nearray,","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":2,"12":4,"14":4,"16":4,"24":1,"25":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/generator.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/generator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":11,"8":11,"9":11,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":11,"18":11,"19":11,"20":11,"21":1,"22":32,"23":32,"24":32,"25":32,"26":1,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":5,"39":1,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":2,"83":0,"84":0,"85":0,"86":0,"87":0,"88":2,"89":1,"90":2,"91":0,"92":0,"93":0,"94":0,"95":0,"96":2,"97":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":11,"2":0,"3":0,"4":0,"5":11,"6":32,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":5,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":2,"30":0,"31":2,"32":0},"fnMap":{"1":{"name":"generatorProtoMap","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":40}}},"3":{"name":"generatorProtoFlatMap","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":24},"end":{"line":44,"column":40}}},"5":{"name":"generatorAssert","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"6":{"name":"generatorBless","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":35}}},"7":{"name":"generateConstant","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":29}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":24},"end":{"line":86,"column":36}}},"9":{"name":"generatorCombine","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":28}}},"10":{"name":"(anonymous_10)","line":98,"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":40}}},"11":{"name":"(anonymous_11)","line":99,"loc":{"start":{"line":99,"column":32},"end":{"line":99,"column":47}}},"12":{"name":"generateOneof","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":35}}},"13":{"name":"(anonymous_13)","line":112,"loc":{"start":{"line":112,"column":21},"end":{"line":112,"column":36}}},"14":{"name":"(anonymous_14)","line":116,"loc":{"start":{"line":116,"column":30},"end":{"line":116,"column":46}}},"15":{"name":"logsize","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":23}}},"16":{"name":"generatorRecursive","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":40}}},"17":{"name":"(anonymous_17)","line":134,"loc":{"start":{"line":134,"column":24},"end":{"line":134,"column":40}}},"18":{"name":"rec","line":135,"loc":{"start":{"line":135,"column":4},"end":{"line":135,"column":27}}},"19":{"name":"(anonymous_19)","line":139,"loc":{"start":{"line":139,"column":35},"end":{"line":139,"column":52}}},"20":{"name":"generatePair","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":34}}},"21":{"name":"(anonymous_21)","line":153,"loc":{"start":{"line":153,"column":30},"end":{"line":153,"column":46}}},"22":{"name":"generateEither","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":36}}},"23":{"name":"(anonymous_23)","line":164,"loc":{"start":{"line":164,"column":30},"end":{"line":164,"column":46}}},"24":{"name":"(anonymous_24)","line":180,"loc":{"start":{"line":180,"column":34},"end":{"line":180,"column":46}}},"25":{"name":"generateTuple","line":187,"loc":{"start":{"line":187,"column":0},"end":{"line":187,"column":29}}},"26":{"name":"(anonymous_26)","line":189,"loc":{"start":{"line":189,"column":30},"end":{"line":189,"column":46}}},"27":{"name":"generateSum","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":27}}},"28":{"name":"(anonymous_28)","line":205,"loc":{"start":{"line":205,"column":30},"end":{"line":205,"column":46}}},"29":{"name":"generateArray","line":216,"loc":{"start":{"line":216,"column":0},"end":{"line":216,"column":28}}},"30":{"name":"(anonymous_30)","line":217,"loc":{"start":{"line":217,"column":30},"end":{"line":217,"column":46}}},"31":{"name":"generateNEArray","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":30}}},"32":{"name":"(anonymous_32)","line":233,"loc":{"start":{"line":233,"column":30},"end":{"line":233,"column":46}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"6":{"start":{"line":31,"column":0},"end":{"line":38,"column":1}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":23}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":29}},"9":{"start":{"line":35,"column":2},"end":{"line":37,"column":5}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"11":{"start":{"line":40,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":23}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":29}},"14":{"start":{"line":44,"column":2},"end":{"line":46,"column":5}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":36}},"16":{"start":{"line":50,"column":0},"end":{"line":55,"column":1}},"17":{"start":{"line":51,"column":2},"end":{"line":51,"column":76}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":84}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":96}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":96}},"21":{"start":{"line":75,"column":0},"end":{"line":80,"column":1}},"22":{"start":{"line":76,"column":2},"end":{"line":76,"column":36}},"23":{"start":{"line":77,"column":2},"end":{"line":77,"column":44}},"24":{"start":{"line":78,"column":2},"end":{"line":78,"column":44}},"25":{"start":{"line":79,"column":2},"end":{"line":79,"column":19}},"26":{"start":{"line":85,"column":0},"end":{"line":89,"column":1}},"27":{"start":{"line":86,"column":2},"end":{"line":88,"column":5}},"28":{"start":{"line":87,"column":4},"end":{"line":87,"column":13}},"29":{"start":{"line":94,"column":0},"end":{"line":105,"column":1}},"30":{"start":{"line":95,"column":2},"end":{"line":95,"column":64}},"31":{"start":{"line":96,"column":2},"end":{"line":96,"column":42}},"32":{"start":{"line":98,"column":2},"end":{"line":104,"column":5}},"33":{"start":{"line":99,"column":4},"end":{"line":101,"column":7}},"34":{"start":{"line":100,"column":6},"end":{"line":100,"column":23}},"35":{"start":{"line":103,"column":4},"end":{"line":103,"column":38}},"36":{"start":{"line":110,"column":0},"end":{"line":123,"column":1}},"37":{"start":{"line":112,"column":2},"end":{"line":114,"column":5}},"38":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"39":{"start":{"line":116,"column":2},"end":{"line":120,"column":5}},"40":{"start":{"line":117,"column":4},"end":{"line":117,"column":47}},"41":{"start":{"line":118,"column":4},"end":{"line":118,"column":30}},"42":{"start":{"line":119,"column":4},"end":{"line":119,"column":21}},"43":{"start":{"line":122,"column":2},"end":{"line":122,"column":43}},"44":{"start":{"line":126,"column":0},"end":{"line":128,"column":1}},"45":{"start":{"line":127,"column":2},"end":{"line":127,"column":67}},"46":{"start":{"line":133,"column":0},"end":{"line":147,"column":1}},"47":{"start":{"line":134,"column":2},"end":{"line":146,"column":5}},"48":{"start":{"line":135,"column":4},"end":{"line":143,"column":5}},"49":{"start":{"line":136,"column":6},"end":{"line":142,"column":7}},"50":{"start":{"line":137,"column":8},"end":{"line":137,"column":27}},"51":{"start":{"line":139,"column":8},"end":{"line":141,"column":19}},"52":{"start":{"line":140,"column":10},"end":{"line":140,"column":35}},"53":{"start":{"line":145,"column":4},"end":{"line":145,"column":36}},"54":{"start":{"line":152,"column":0},"end":{"line":158,"column":1}},"55":{"start":{"line":153,"column":2},"end":{"line":155,"column":5}},"56":{"start":{"line":154,"column":4},"end":{"line":154,"column":36}},"57":{"start":{"line":157,"column":2},"end":{"line":157,"column":43}},"58":{"start":{"line":163,"column":0},"end":{"line":174,"column":1}},"59":{"start":{"line":164,"column":2},"end":{"line":171,"column":5}},"60":{"start":{"line":165,"column":4},"end":{"line":165,"column":25}},"61":{"start":{"line":166,"column":4},"end":{"line":170,"column":5}},"62":{"start":{"line":167,"column":14},"end":{"line":167,"column":45}},"63":{"start":{"line":168,"column":14},"end":{"line":168,"column":46}},"64":{"start":{"line":173,"column":2},"end":{"line":173,"column":43}},"65":{"start":{"line":180,"column":0},"end":{"line":182,"column":3}},"66":{"start":{"line":181,"column":2},"end":{"line":181,"column":12}},"67":{"start":{"line":187,"column":0},"end":{"line":198,"column":1}},"68":{"start":{"line":188,"column":2},"end":{"line":188,"column":24}},"69":{"start":{"line":189,"column":2},"end":{"line":195,"column":5}},"70":{"start":{"line":190,"column":4},"end":{"line":190,"column":15}},"71":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"72":{"start":{"line":192,"column":6},"end":{"line":192,"column":27}},"73":{"start":{"line":194,"column":4},"end":{"line":194,"column":13}},"74":{"start":{"line":197,"column":2},"end":{"line":197,"column":43}},"75":{"start":{"line":203,"column":0},"end":{"line":211,"column":1}},"76":{"start":{"line":204,"column":2},"end":{"line":204,"column":24}},"77":{"start":{"line":205,"column":2},"end":{"line":208,"column":5}},"78":{"start":{"line":206,"column":4},"end":{"line":206,"column":33}},"79":{"start":{"line":207,"column":4},"end":{"line":207,"column":49}},"80":{"start":{"line":210,"column":2},"end":{"line":210,"column":43}},"81":{"start":{"line":216,"column":0},"end":{"line":227,"column":1}},"82":{"start":{"line":217,"column":2},"end":{"line":224,"column":5}},"83":{"start":{"line":218,"column":4},"end":{"line":218,"column":43}},"84":{"start":{"line":219,"column":4},"end":{"line":219,"column":33}},"85":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"86":{"start":{"line":221,"column":6},"end":{"line":221,"column":25}},"87":{"start":{"line":223,"column":4},"end":{"line":223,"column":15}},"88":{"start":{"line":226,"column":2},"end":{"line":226,"column":43}},"89":{"start":{"line":232,"column":0},"end":{"line":243,"column":1}},"90":{"start":{"line":233,"column":2},"end":{"line":240,"column":5}},"91":{"start":{"line":234,"column":4},"end":{"line":234,"column":56}},"92":{"start":{"line":235,"column":4},"end":{"line":235,"column":33}},"93":{"start":{"line":236,"column":4},"end":{"line":238,"column":5}},"94":{"start":{"line":237,"column":6},"end":{"line":237,"column":25}},"95":{"start":{"line":239,"column":4},"end":{"line":239,"column":15}},"96":{"start":{"line":242,"column":2},"end":{"line":242,"column":43}},"97":{"start":{"line":249,"column":0},"end":{"line":262,"column":2}}},"branchMap":{"1":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"2":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":10},"end":{"line":136,"column":16}},{"start":{"line":136,"column":20},"end":{"line":136,"column":38}}]},"3":{"line":166,"type":"switch","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":45}},{"start":{"line":168,"column":6},"end":{"line":168,"column":46}}]}},"code":["/* @flow weak */","\"use strict\";","","var assert = require(\"assert\");","var either = require(\"./either.js\");","var random = require(\"./random.js\");","var sum = require(\"./sum.js\");","var utils = require(\"./utils.js\");","","/**","  ### Generator functions","","  A generator function, `generator a`, is a function `(size: nat) -> a`, which generates a value of given size.","","  Generator combinators are auto-curried:","","  ```js","  var xs = jsc.generator.array(jsc.nat.generator, 1); // ≡","  var ys = jsc.generator.array(jsc.nat.generator)(1);","  ```","","  In purely functional approach `generator a` would be explicitly stateful computation:","  `(size: nat, rng: randomstate) -> (a, randomstate)`.","  *JSVerify* uses an implicit random number generator state,","  but the value generation is deterministic (tests are reproducible),","  if the primitives from *random* module are used.","*/","","// Blessing: i.e adding prototype","/* eslint-disable no-use-before-define */","function generatorProtoMap(f) {","  /* jshint validthis:true */","  var generator = this; // eslint-disable-line no-invalid-this","  generatorAssert(generator);","  return generatorBless(function (size) {","    return f(generator(size));","  });","}","","function generatorProtoFlatMap(f) {","  /* jshint validthis:true */","  var generator = this; // eslint-disable-line no-invalid-this","  generatorAssert(generator);","  return generatorBless(function (size) {","    return f(generator(size))(size);","  });","}","/* eslint-enable no-use-before-define */","","function generatorAssert(generator) {","  assert(typeof generator === \"function\", \"generator should be a function\");","  assert(generator.map === generatorProtoMap, \"generator.map should be a function\");","  assert(generator.flatmap === generatorProtoFlatMap, \"generator.flatmap should be a function\");","  assert(generator.flatMap === generatorProtoFlatMap, \"generator.flatMap should be a function\");","}","","/**","  - `generator.bless(f: nat -> a): generator a`","","      Bless function with `.map` and `.flatmap` properties.","","  - `.map(f: a -> b): generator b`","","      Map `generator a` into `generator b`. For example:","","      ```js","      positiveIntegersGenerator = nat.generator.map(","        function (x) { return x + 1; });","      ```","","  - `.flatmap(f: a -> generator b): generator b`","","      Monadic bind for generators. Also `flatMap` version is supported.","*/","function generatorBless(generator) {","  generator.map = generatorProtoMap;","  generator.flatmap = generatorProtoFlatMap;","  generator.flatMap = generatorProtoFlatMap;","  return generator;","}","","/**","  - `generator.constant(x: a): generator a`","*/","function generateConstant(x) {","  return generatorBless(function () {","    return x;","  });","}","","/**","  - `generator.combine(gen: generator a..., f: a... -> b): generator b`","*/","function generatorCombine() {","  var generators = Array.prototype.slice.call(arguments, 0, -1);","  var f = arguments[arguments.length - 1];","","  return generatorBless(function (size) {","    var values = generators.map(function (gen) {","      return gen(size);","    });","","    return f.apply(undefined, values);","  });","}","","/**","  - `generator.oneof(gens: list (generator a)): generator a`","*/","function generateOneof(generators) {","  // TODO: generator","  generators.forEach(function (gen) {","    assert(typeof gen === \"function\");","  });","","  var result = generatorBless(function (size) {","    var idx = random(0, generators.length - 1);","    var gen = generators[idx];","    return gen(size);","  });","","  return utils.curried2(result, arguments);","}","","// Helper, essentially: log2(size + 1)","function logsize(size) {","  return Math.max(Math.round(Math.log(size + 1) / Math.log(2), 0));","}","","/**","  - `generator.recursive(genZ: generator a, genS: generator a -> generator a): generator a`","*/","function generatorRecursive(genZ, genS) {","  return generatorBless(function (size) {","    function rec(n, sizep) {","      if (n <= 0 || random(0, 3) === 0) {","        return genZ(sizep);","      } else {","        return genS(generatorBless(function (sizeq) {","          return rec(n - 1, sizeq);","        }))(sizep);","      }","    }","","    return rec(logsize(size), size);","  });","}","","/**","  - `generator.pair(genA: generator a, genB: generator b): generator (a, b)`","*/","function generatePair(genA, genB) {","  var result = generatorBless(function (size) {","    return [genA(size), genB(size)];","  });","","  return utils.curried3(result, arguments);","}","","/**","  - `generator.either(genA: generator a, genB: generator b): generator (either a b)`","*/","function generateEither(genA, genB) {","  var result = generatorBless(function (size) { // eslint-disable-line consistent-return","    var n = random(0, 1);","    switch (n) {","      case 0: return either.left(genA(size));","      case 1: return either.right(genB(size));","      // no default","    }","  });","","  return utils.curried3(result, arguments);","}","/**","  - `generator.unit: generator ()`","","      `unit` is an empty tuple, i.e. empty array in JavaScript representation. This is useful as a building block.","*/","var generateUnit = generatorBless(function () {","  return [];","});","","/**","  - `generator.tuple(gens: (generator a, generator b...)): generator (a, b...)`","*/","function generateTuple(gens) {","  var len = gens.length;","  var result = generatorBless(function (size) {","    var r = [];","    for (var i = 0; i < len; i++) {","      r[i] = gens[i](size);","    }","    return r;","  });","","  return utils.curried2(result, arguments);","}","","/**","  - `generator.sum(gens: (generator a, generator b...)): generator (a | b...)`","*/","function generateSum(gens) {","  var len = gens.length;","  var result = generatorBless(function (size) {","    var idx = random(0, len - 1);","    return sum.addend(idx, len, gens[idx](size));","  });","","  return utils.curried2(result, arguments);","}","","/**","   - `generator.array(gen: generator a): generator (array a)`","*/","function generateArray(gen) {","  var result = generatorBless(function (size) {","    var arrsize = random(0, logsize(size));","    var arr = new Array(arrsize);","    for (var i = 0; i < arrsize; i++) {","      arr[i] = gen(size);","    }","    return arr;","  });","","  return utils.curried2(result, arguments);","}","","/**","   - `generator.nearray(gen: generator a): generator (array a)`","*/","function generateNEArray(gen) {","  var result = generatorBless(function (size) {","    var arrsize = random(1, Math.max(logsize(size), 1));","    var arr = new Array(arrsize);","    for (var i = 0; i < arrsize; i++) {","      arr[i] = gen(size);","    }","    return arr;","  });","","  return utils.curried2(result, arguments);","}","","/**","  - `generator.dict(gen: generator a): generator (dict a)`","*/","","module.exports = {","  pair: generatePair,","  either: generateEither,","  unit: generateUnit,","  tuple: generateTuple,","  sum: generateSum,","  array: generateArray,","  nearray: generateNEArray,","  oneof: generateOneof,","  constant: generateConstant,","  bless: generatorBless,","  combine: generatorCombine,","  recursive: generatorRecursive,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"31":1,"33":11,"34":11,"35":11,"36":0,"40":1,"42":0,"43":0,"44":0,"45":0,"50":1,"51":11,"52":11,"53":11,"54":11,"75":1,"76":32,"77":32,"78":32,"79":32,"85":1,"86":1,"87":0,"94":1,"95":0,"96":0,"98":0,"99":0,"100":0,"103":0,"110":1,"112":1,"113":5,"116":1,"117":0,"118":0,"119":0,"122":1,"126":1,"127":0,"133":1,"134":1,"135":1,"136":0,"137":0,"139":0,"140":0,"145":0,"152":1,"153":0,"154":0,"157":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"173":0,"180":1,"181":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0,"197":0,"203":1,"204":0,"205":0,"206":0,"207":0,"210":0,"216":1,"217":2,"218":0,"219":0,"220":0,"221":0,"223":0,"226":2,"232":1,"233":2,"234":0,"235":0,"236":0,"237":0,"239":0,"242":2,"249":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/either.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/either.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"Left","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}}},"2":{"name":"Right","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}}},"3":{"name":"left","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}}},"4":{"name":"right","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":22}}},"5":{"name":"lefteither","line":34,"loc":{"start":{"line":34,"column":24},"end":{"line":34,"column":47}}},"6":{"name":"righteither","line":38,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":52}}},"7":{"name":"leftIsEqual","line":47,"loc":{"start":{"line":47,"column":25},"end":{"line":47,"column":53}}},"8":{"name":"rightIsEqual","line":52,"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":55}}},"9":{"name":"leftBimap","line":65,"loc":{"start":{"line":65,"column":23},"end":{"line":65,"column":45}}},"10":{"name":"rightBimap","line":69,"loc":{"start":{"line":69,"column":24},"end":{"line":69,"column":50}}},"11":{"name":"leftFirst","line":80,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":45}}},"12":{"name":"rightFirst","line":84,"loc":{"start":{"line":84,"column":24},"end":{"line":84,"column":46}}},"13":{"name":"leftSecond","line":95,"loc":{"start":{"line":95,"column":24},"end":{"line":95,"column":46}}},"14":{"name":"rightSecond","line":99,"loc":{"start":{"line":99,"column":25},"end":{"line":99,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":21}},"4":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"6":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}},"8":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"10":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"12":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"14":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":105}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":61}},"17":{"start":{"line":52,"column":0},"end":{"line":55,"column":2}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":105}},"19":{"start":{"line":54,"column":2},"end":{"line":54,"column":62}},"20":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"21":{"start":{"line":66,"column":2},"end":{"line":66,"column":33}},"22":{"start":{"line":69,"column":0},"end":{"line":71,"column":2}},"23":{"start":{"line":70,"column":2},"end":{"line":70,"column":34}},"24":{"start":{"line":80,"column":0},"end":{"line":82,"column":2}},"25":{"start":{"line":81,"column":2},"end":{"line":81,"column":33}},"26":{"start":{"line":84,"column":0},"end":{"line":86,"column":2}},"27":{"start":{"line":85,"column":2},"end":{"line":85,"column":14}},"28":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"29":{"start":{"line":96,"column":2},"end":{"line":96,"column":14}},"30":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"31":{"start":{"line":100,"column":2},"end":{"line":100,"column":34}},"32":{"start":{"line":103,"column":0},"end":{"line":106,"column":2}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":9},"end":{"line":48,"column":30}},{"start":{"line":48,"column":34},"end":{"line":48,"column":56}}]},"2":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":30}},{"start":{"line":49,"column":34},"end":{"line":49,"column":60}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":30}},{"start":{"line":53,"column":34},"end":{"line":53,"column":56}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":9},"end":{"line":54,"column":31}},{"start":{"line":54,"column":35},"end":{"line":54,"column":61}}]}},"code":["\"use strict\";","","var assert = require(\"assert\");","","/**","  ### either","*/","","function Left(value) {","  this.value = value;","}","","function Right(value) {","  this.value = value;","}","","/**","  - `either.left(value: a): either a b`","*/","function left(value) {","  return new Left(value);","}","","/**","  - `either.right(value: b): either a b`","*/","function right(value) {","  return new Right(value);","}","","/**","  - `either.either(l: a -> x, r: b -> x): x`","*/","Left.prototype.either = function lefteither(l) {","  return l(this.value);","};","","Right.prototype.either = function righteither(l, r) {","  return r(this.value);","};","","/**","  - `either.isEqual(other: either a b): bool`","","      TODO: add `eq` optional parameter","*/","Left.prototype.isEqual = function leftIsEqual(other) {","  assert(other instanceof Left || other instanceof Right, \"isEqual: `other` parameter should be either\");","  return other instanceof Left && this.value === other.value;","};","","Right.prototype.isEqual = function rightIsEqual(other) {","  assert(other instanceof Left || other instanceof Right, \"isEqual: `other` parameter should be either\");","  return other instanceof Right && this.value === other.value;","};","","/**","  - `either.bimap(f: a -> c, g: b -> d): either c d`","","      ```js","      either.bimap(compose(f, g), compose(h, i)) ≡ either.bimap(g, i).bimap(f, h);","      ```","","*/","Left.prototype.bimap = function leftBimap(f) {","  return new Left(f(this.value));","};","","Right.prototype.bimap = function rightBimap(f, g) {","  return new Right(g(this.value));","};","","/**","  - `either.first(f: a -> c): either c b`","","      ```js","      either.first(f) ≡ either.bimap(f, utils.identity)","      ```","*/","Left.prototype.first = function leftFirst(f) {","  return new Left(f(this.value));","};","","Right.prototype.first = function rightFirst() {","  return this;","};","","/**","  - `either.second(g: b -> d): either a d`","","      ```js","      either.second(g) === either.bimap(utils.identity, g)","      ```","*/","Left.prototype.second = function leftSecond() {","  return this;","};","","Right.prototype.second = function rightSecond(g) {","  return new Right(g(this.value));","};","","module.exports = {","  left: left,","  right: right,","};",""],"l":{"3":1,"9":1,"10":0,"13":1,"14":0,"20":1,"21":0,"27":1,"28":0,"34":1,"35":0,"38":1,"39":0,"47":1,"48":0,"49":0,"52":1,"53":0,"54":0,"65":1,"66":0,"69":1,"70":0,"80":1,"81":0,"84":1,"85":0,"95":1,"96":0,"99":1,"100":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/random.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/random.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"randomInteger","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"2":{"name":"randomNumber","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":30}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":47}},"6":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":68}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":60}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}}},"branchMap":{},"code":["/* @flow weak */","\"use strict\";","","var rc4 = new (require(\"rc4\").RC4small)();","","/**","  ### Random functions","*/","","/**","  - `random(min: int, max: int): int`","","      Returns random int from `[min, max]` range inclusively.","","      ```js","      getRandomInt(2, 3) // either 2 or 3","      ```","*/","function randomInteger(min, max) {","  return rc4.random(min, max);","}","","/**","  - `random.number(min: number, max: number): number`","","      Returns random number from `[min, max)` range.","*/","function randomNumber(min, max) {","  return rc4.randomFloat() * (max - min) + min;","}","","randomInteger.integer = randomInteger;","randomInteger.number = randomNumber;","","randomInteger.currentStateString = rc4.currentStateString.bind(rc4);","randomInteger.setStateString = rc4.setStateString.bind(rc4);","","module.exports = randomInteger;",""],"l":{"4":1,"19":1,"20":0,"28":1,"29":0,"32":1,"33":1,"35":1,"36":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/sum.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/sum.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Addend","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}}},"2":{"name":"addend","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":11,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":37}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":58}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":17}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":17}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"8":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":37}},"10":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":43}},"12":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":9},"end":{"line":13,"column":17}},{"start":{"line":13,"column":21},"end":{"line":13,"column":30}}]}},"code":["\"use strict\";","","var assert = require(\"assert\");","","/**","  ### sum (n-ary either)","","  See: [Wikipedia](https://en.wikipedia.org/wiki/Tagged_union)","*/","","function Addend(idx, len, value) {","  assert(len > 0, \"Addend: 0 < len\"); // empty sum is void - cannot create such","  assert(idx >= 0 && idx < len, \"Addend: 0 <= idx < len\");","  this.idx = idx;","  this.len = len;","  this.value = value;","}","","/**","  - `sum.addend(idx: nat, n: nat, value: a): sum (... a ...)`","*/","function addend(idx, len, value) {","  return new Addend(idx, len, value);","}","","/**","  - `.fold(f: (idx: nat, n: nat, value: a) -> b): b`","*/","Addend.prototype.fold = function (f) {","  return f(this.idx, this.len, this.value);","};","","module.exports = {","  addend: addend,","};",""],"l":{"3":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"22":1,"23":0,"29":1,"30":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/shrink.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/shrink.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":11,"8":11,"9":0,"10":1,"11":32,"12":32,"13":1,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":5,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":5,"88":2,"89":1,"90":1,"91":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":11,"2":0,"3":32,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":2,"26":5,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"shrinkProtoIsoMap","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":21},"end":{"line":28,"column":38}}},"3":{"name":"shrinkBless","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}}},"4":{"name":"shrinkNoop","line":57,"loc":{"start":{"line":57,"column":29},"end":{"line":57,"column":51}}},"5":{"name":"shrinkPair","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":38}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":27},"end":{"line":65,"column":43}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":30},"end":{"line":74,"column":44}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":24},"end":{"line":82,"column":36}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":32},"end":{"line":83,"column":46}}},"10":{"name":"shrinkEither","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":40}}},"11":{"name":"shrinkLeft","line":97,"loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":29}}},"12":{"name":"shrinkRight","line":101,"loc":{"start":{"line":101,"column":2},"end":{"line":101,"column":30}}},"13":{"name":"(anonymous_13)","line":105,"loc":{"start":{"line":105,"column":27},"end":{"line":105,"column":40}}},"14":{"name":"fromLinkedList","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":28}}},"15":{"name":"toLinkedList","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":27}}},"16":{"name":"toSingleton","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":24}}},"17":{"name":"fromSingleton","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":26}}},"18":{"name":"flattenShrink","line":142,"loc":{"start":{"line":142,"column":0},"end":{"line":142,"column":34}}},"19":{"name":"shrinkTuple","line":155,"loc":{"start":{"line":155,"column":0},"end":{"line":155,"column":30}}},"20":{"name":"(anonymous_20)","line":159,"loc":{"start":{"line":159,"column":27},"end":{"line":159,"column":44}}},"21":{"name":"shrinkSum","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":28}}},"22":{"name":"(anonymous_22)","line":173,"loc":{"start":{"line":173,"column":27},"end":{"line":173,"column":40}}},"23":{"name":"(anonymous_23)","line":174,"loc":{"start":{"line":174,"column":18},"end":{"line":174,"column":45}}},"24":{"name":"(anonymous_24)","line":176,"loc":{"start":{"line":176,"column":37},"end":{"line":176,"column":57}}},"25":{"name":"shrinkArrayWithMinimumSize","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":42}}},"26":{"name":"shrinkArrayImpl","line":186,"loc":{"start":{"line":186,"column":2},"end":{"line":186,"column":35}}},"27":{"name":"(anonymous_27)","line":187,"loc":{"start":{"line":187,"column":29},"end":{"line":187,"column":44}}},"28":{"name":"(anonymous_28)","line":196,"loc":{"start":{"line":196,"column":32},"end":{"line":196,"column":46}}},"29":{"name":"(anonymous_29)","line":197,"loc":{"start":{"line":197,"column":50},"end":{"line":197,"column":65}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"6":{"start":{"line":25,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":5}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"10":{"start":{"line":49,"column":0},"end":{"line":52,"column":1}},"11":{"start":{"line":50,"column":2},"end":{"line":50,"column":34}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":16}},"13":{"start":{"line":57,"column":0},"end":{"line":59,"column":3}},"14":{"start":{"line":58,"column":2},"end":{"line":58,"column":12}},"15":{"start":{"line":64,"column":0},"end":{"line":91,"column":1}},"16":{"start":{"line":65,"column":2},"end":{"line":88,"column":5}},"17":{"start":{"line":66,"column":4},"end":{"line":66,"column":81}},"18":{"start":{"line":68,"column":4},"end":{"line":68,"column":20}},"19":{"start":{"line":69,"column":4},"end":{"line":69,"column":20}},"20":{"start":{"line":71,"column":4},"end":{"line":71,"column":31}},"21":{"start":{"line":72,"column":4},"end":{"line":72,"column":31}},"22":{"start":{"line":74,"column":4},"end":{"line":76,"column":7}},"23":{"start":{"line":75,"column":6},"end":{"line":75,"column":21}},"24":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"25":{"start":{"line":79,"column":6},"end":{"line":79,"column":39}},"26":{"start":{"line":82,"column":4},"end":{"line":87,"column":7}},"27":{"start":{"line":83,"column":6},"end":{"line":85,"column":9}},"28":{"start":{"line":84,"column":8},"end":{"line":84,"column":23}},"29":{"start":{"line":86,"column":6},"end":{"line":86,"column":19}},"30":{"start":{"line":90,"column":2},"end":{"line":90,"column":43}},"31":{"start":{"line":96,"column":0},"end":{"line":110,"column":1}},"32":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"33":{"start":{"line":98,"column":4},"end":{"line":98,"column":43}},"34":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"35":{"start":{"line":102,"column":4},"end":{"line":102,"column":44}},"36":{"start":{"line":105,"column":2},"end":{"line":107,"column":5}},"37":{"start":{"line":106,"column":4},"end":{"line":106,"column":45}},"38":{"start":{"line":109,"column":2},"end":{"line":109,"column":43}},"39":{"start":{"line":115,"column":0},"end":{"line":122,"column":1}},"40":{"start":{"line":116,"column":2},"end":{"line":116,"column":97}},"41":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"42":{"start":{"line":118,"column":4},"end":{"line":118,"column":19}},"43":{"start":{"line":120,"column":4},"end":{"line":120,"column":49}},"44":{"start":{"line":124,"column":0},"end":{"line":131,"column":1}},"45":{"start":{"line":125,"column":2},"end":{"line":125,"column":87}},"46":{"start":{"line":126,"column":2},"end":{"line":130,"column":3}},"47":{"start":{"line":127,"column":4},"end":{"line":127,"column":20}},"48":{"start":{"line":129,"column":4},"end":{"line":129,"column":48}},"49":{"start":{"line":133,"column":0},"end":{"line":135,"column":1}},"50":{"start":{"line":134,"column":2},"end":{"line":134,"column":13}},"51":{"start":{"line":138,"column":0},"end":{"line":140,"column":1}},"52":{"start":{"line":139,"column":2},"end":{"line":139,"column":14}},"53":{"start":{"line":142,"column":0},"end":{"line":150,"column":1}},"54":{"start":{"line":143,"column":2},"end":{"line":149,"column":3}},"55":{"start":{"line":144,"column":4},"end":{"line":144,"column":57}},"56":{"start":{"line":146,"column":4},"end":{"line":146,"column":28}},"57":{"start":{"line":147,"column":4},"end":{"line":147,"column":28}},"58":{"start":{"line":148,"column":4},"end":{"line":148,"column":49}},"59":{"start":{"line":155,"column":0},"end":{"line":166,"column":1}},"60":{"start":{"line":156,"column":2},"end":{"line":156,"column":61}},"61":{"start":{"line":157,"column":2},"end":{"line":157,"column":40}},"62":{"start":{"line":158,"column":2},"end":{"line":158,"column":40}},"63":{"start":{"line":159,"column":2},"end":{"line":163,"column":5}},"64":{"start":{"line":160,"column":4},"end":{"line":160,"column":80}},"65":{"start":{"line":161,"column":4},"end":{"line":161,"column":33}},"66":{"start":{"line":162,"column":4},"end":{"line":162,"column":42}},"67":{"start":{"line":165,"column":2},"end":{"line":165,"column":43}},"68":{"start":{"line":171,"column":0},"end":{"line":183,"column":1}},"69":{"start":{"line":172,"column":2},"end":{"line":172,"column":61}},"70":{"start":{"line":173,"column":2},"end":{"line":180,"column":5}},"71":{"start":{"line":174,"column":4},"end":{"line":179,"column":7}},"72":{"start":{"line":175,"column":6},"end":{"line":175,"column":71}},"73":{"start":{"line":176,"column":6},"end":{"line":178,"column":9}},"74":{"start":{"line":177,"column":8},"end":{"line":177,"column":46}},"75":{"start":{"line":182,"column":2},"end":{"line":182,"column":43}},"76":{"start":{"line":185,"column":0},"end":{"line":205,"column":1}},"77":{"start":{"line":186,"column":2},"end":{"line":202,"column":3}},"78":{"start":{"line":187,"column":4},"end":{"line":199,"column":7}},"79":{"start":{"line":188,"column":6},"end":{"line":188,"column":81}},"80":{"start":{"line":189,"column":6},"end":{"line":198,"column":7}},"81":{"start":{"line":190,"column":8},"end":{"line":190,"column":27}},"82":{"start":{"line":192,"column":8},"end":{"line":192,"column":23}},"83":{"start":{"line":193,"column":8},"end":{"line":193,"column":30}},"84":{"start":{"line":195,"column":8},"end":{"line":197,"column":95}},"85":{"start":{"line":196,"column":48},"end":{"line":196,"column":71}},"86":{"start":{"line":197,"column":67},"end":{"line":197,"column":90}},"87":{"start":{"line":201,"column":4},"end":{"line":201,"column":45}},"88":{"start":{"line":204,"column":2},"end":{"line":204,"column":25}},"89":{"start":{"line":210,"column":0},"end":{"line":210,"column":48}},"90":{"start":{"line":215,"column":0},"end":{"line":215,"column":50}},"91":{"start":{"line":217,"column":0},"end":{"line":226,"column":2}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"2":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":9},"end":{"line":116,"column":24}},{"start":{"line":116,"column":28},"end":{"line":116,"column":43}}]},"3":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"4":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":9},"end":{"line":125,"column":27}},{"start":{"line":125,"column":31},"end":{"line":125,"column":45}}]},"5":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"6":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"7":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]}},"code":["/* @flow weak */","\"use strict\";","","var assert = require(\"assert\");","var either = require(\"./either.js\");","var lazyseq = require(\"lazy-seq\");","var sum = require(\"./sum.js\");","var utils = require(\"./utils.js\");","","/**","  ### Shrink functions","","  A shrink function, `shrink a`, is a function `a -> [a]`, returning an array of *smaller* values.","","  Shrink combinators are auto-curried:","","  ```js","  var xs = jsc.shrink.array(jsc.nat.shrink, [1]); // ≡","  var ys = jsc.shrink.array(jsc.nat.shrink)([1]);","  ```","*/","","// Blessing: i.e adding prototype","/* eslint-disable no-use-before-define */","function shrinkProtoIsoMap(f, g) {","  /* jshint validthis:true */","  var shrink = this; // eslint-disable-line no-invalid-this","  return shrinkBless(function (value) {","    return shrink(g(value)).map(f);","  });","}","/* eslint-enable no-use-before-define */","","/**","  - `shrink.bless(f: a -> [a]): shrink a`","","      Bless function with `.smap` property.","","  - `.smap(f: a -> b, g: b -> a): shrink b`","","      Transform `shrink a` into `shrink b`. For example:","","      ```js","      positiveIntegersShrink = nat.shrink.smap(","        function (x) { return x + 1; },","        function (x) { return x - 1; });","      ```","*/","function shrinkBless(shrink) {","  shrink.smap = shrinkProtoIsoMap;","  return shrink;","}","","/**","  - `shrink.noop: shrink a`","*/","var shrinkNoop = shrinkBless(function shrinkNoop() {","  return [];","});","","/**","  - `shrink.pair(shrA: shrink a, shrB: shrink b): shrink (a, b)`","*/","function shrinkPair(shrinkA, shrinkB) {","  var result = shrinkBless(function (pair) {","    assert(pair.length === 2, \"shrinkPair: pair should be an Array of length 2\");","","    var a = pair[0];","    var b = pair[1];","","    var shrinkedA = shrinkA(a);","    var shrinkedB = shrinkB(b);","","    var pairA = shrinkedA.map(function (ap) {","      return [ap, b];","    });","","    if (Array.isArray(pairA)) {","      pairA = lazyseq.fromArray(pairA);","    }","","    return pairA.append(function () {","      var pairB = shrinkedB.map(function (bp) {","        return [a, bp];","      });","      return pairB;","    });","  });","","  return utils.curried3(result, arguments);","}","","/**","  - `shrink.either(shrA: shrink a, shrB: shrink b): shrink (either a b)`","*/","function shrinkEither(shrinkA, shrinkB) {","  function shrinkLeft(value) {","    return shrinkA(value).map(either.left);","  }","","  function shrinkRight(value) {","    return shrinkB(value).map(either.right);","  }","","  var result = shrinkBless(function (e) {","    return e.either(shrinkLeft, shrinkRight);","  });","","  return utils.curried3(result, arguments);","}","","// We represent non-empty linked list as","// singl x = [x]","// cons h t = [h, t]","function fromLinkedList(ll) {","  assert(ll.length === 1 || ll.length === 2, \"linked list must be either [] or [x, linkedlist]\");","  if (ll.length === 1) {","    return [ll[0]];","  } else {","    return [ll[0]].concat(fromLinkedList(ll[1]));","  }","}","","function toLinkedList(arr) {","  assert(Array.isArray(arr) && arr.length > 0, \"toLinkedList expects non-empty array\");","  if (arr.length === 1) {","    return [arr[0]];","  } else {","    return [arr[0], toLinkedList(arr.slice(1))];","  }","}","","function toSingleton(x) {","  return [x];","}","","// Vec a 1 → a","function fromSingleton(a) {","  return a[0];","}","","function flattenShrink(shrinksLL) {","  if (shrinksLL.length === 1) {","    return shrinksLL[0].smap(toSingleton, fromSingleton);","  } else {","    var head = shrinksLL[0];","    var tail = shrinksLL[1];","    return shrinkPair(head, flattenShrink(tail));","  }","}","","/**","  - `shrink.tuple(shrs: (shrink a, shrink b...)): shrink (a, b...)`","*/","function shrinkTuple(shrinks) {","  assert(shrinks.length > 0, \"shrinkTuple needs > 0 values\");","  var shrinksLL = toLinkedList(shrinks);","  var shrink = flattenShrink(shrinksLL);","  var result = shrinkBless(function (tuple) {","    assert(tuple.length === shrinks.length, \"shrinkTuple: not-matching params\");","    var ll = toLinkedList(tuple);","    return shrink(ll).map(fromLinkedList);","  });","","  return utils.curried2(result, arguments);","}","","/**","  - `shrink.sum(shrs: (shrink a, shrink b...)): shrink (a | b...)`","*/","function shrinkSum(shrinks) {","  assert(shrinks.length > 0, \"shrinkTuple needs > 0 values\");","  var result = shrinkBless(function (s) {","    return s.fold(function (idx, len, value) {","      assert(len === shrinks.length, \"shrinkSum: not-matching params\");","      return shrinks[idx](value).map(function (shrinked) {","        return sum.addend(idx, len, shrinked);","      });","    });","  });","","  return utils.curried2(result, arguments);","}","","function shrinkArrayWithMinimumSize(size) {","  function shrinkArrayImpl(shrink) {","    var result = shrinkBless(function (arr) {","      assert(Array.isArray(arr), \"shrinkArrayImpl() expects array, got: \" + arr);","      if (arr.length <= size) {","        return lazyseq.nil;","      } else {","        var x = arr[0];","        var xs = arr.slice(1);","","        return lazyseq.cons(xs, lazyseq.nil)","          .append(shrink(x).map(function (xp) { return [xp].concat(xs); }))","          .append(shrinkArrayImpl(shrink, xs).map(function (xsp) { return [x].concat(xsp); }));","      }","    });","","    return utils.curried2(result, arguments);","  }","","  return shrinkArrayImpl;","}","","/**","  - `shrink.array(shr: shrink a): shrink (array a)`","*/","var shrinkArray = shrinkArrayWithMinimumSize(0);","","/**","  - `shrink.nearray(shr: shrink a): shrink (nearray a)`","*/","var shrinkNEArray = shrinkArrayWithMinimumSize(1);","","module.exports = {","  noop: shrinkNoop,","  pair: shrinkPair,","  either: shrinkEither,","  tuple: shrinkTuple,","  sum: shrinkSum,","  array: shrinkArray,","  nearray: shrinkNEArray,","  bless: shrinkBless,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"25":1,"27":11,"28":11,"29":0,"49":1,"50":32,"51":32,"57":1,"58":0,"64":1,"65":1,"66":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"78":0,"79":0,"82":0,"83":0,"84":0,"86":0,"90":1,"96":1,"97":1,"98":0,"101":1,"102":0,"105":0,"106":0,"109":0,"115":1,"116":0,"117":0,"118":0,"120":0,"124":1,"125":0,"126":0,"127":0,"129":0,"133":1,"134":0,"138":1,"139":0,"142":1,"143":0,"144":0,"146":0,"147":0,"148":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"165":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"182":0,"185":1,"186":1,"187":5,"188":0,"189":0,"190":0,"192":0,"193":0,"195":0,"196":0,"197":0,"201":5,"204":2,"210":1,"215":1,"217":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/dict.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/dict.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"makeMapShow","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":9},"end":{"line":12,"column":22}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":36},"end":{"line":13,"column":49}}},"4":{"name":"generateDict","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"5":{"name":"dict","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":19}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"7":{"start":{"line":11,"column":0},"end":{"line":17,"column":1}},"8":{"start":{"line":12,"column":2},"end":{"line":16,"column":4}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":24}},"10":{"start":{"line":14,"column":6},"end":{"line":14,"column":37}},"11":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":61}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":51}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":43}},"16":{"start":{"line":30,"column":0},"end":{"line":38,"column":1}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":25}},"18":{"start":{"line":32,"column":2},"end":{"line":32,"column":23}},"19":{"start":{"line":34,"column":2},"end":{"line":34,"column":52}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":50}},"21":{"start":{"line":37,"column":2},"end":{"line":37,"column":98}},"22":{"start":{"line":40,"column":0},"end":{"line":43,"column":2}}},"branchMap":{},"code":["/* @flow weak */","\"use strict\";","","var arbitraryAssert = require(\"./arbitraryAssert.js\");","var array = require(\"./array.js\");","var generator = require(\"./generator.js\");","var pair = require(\"./pair.js\");","var string = require(\"./string.js\");","var utils = require(\"./utils.js\");","","function makeMapShow(elShow) {","  return function (m) {","    return \"{\" + Object.keys(m).map(function (k) {","      return k + \": \" + elShow(m[k]);","    }).join(\", \") + \"}\";","  };","}","","/**","  - `dict.generator(gen: generator a): generator (dict a)`","*/","function generateDict(gen) {","  var pairGen = generator.pair(string.string.generator, gen);","  var arrayGen = generator.array(pairGen);","  var result = arrayGen.map(utils.pairArrayToDict);","","  return utils.curried2(result, arguments);","}","","function dict(arb) {","  arb = utils.force(arb);","  arbitraryAssert(arb);","","  var pairArbitrary = pair.pair(string.string, arb);","  var arrayArbitrary = array.array(pairArbitrary);","","  return arrayArbitrary.smap(utils.pairArrayToDict, utils.dictToPairArray, makeMapShow(arb.show));","}","","module.exports = {","  arbitrary: dict,","  generator: generateDict,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"22":1,"23":0,"24":0,"25":0,"27":0,"30":1,"31":0,"32":0,"34":0,"35":0,"37":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/pair.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/pair.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"pair","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"7":{"start":{"line":10,"column":0},"end":{"line":22,"column":1}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":21}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":21}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}},"12":{"start":{"line":17,"column":2},"end":{"line":21,"column":5}},"13":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}}},"branchMap":{},"code":["\"use strict\";","","var arbitraryAssert = require(\"./arbitraryAssert.js\");","var arbitraryBless = require(\"./arbitraryBless.js\");","var generator = require(\"./generator.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var utils = require(\"./utils.js\");","","function pair(a, b) {","  a = utils.force(a);","  b = utils.force(b);","","  arbitraryAssert(a);","  arbitraryAssert(b);","","  return arbitraryBless({","    generator: generator.pair(a.generator, b.generator),","    shrink: shrink.pair(a.shrink, b.shrink),","    show: show.pair(a.show, b.show),","  });","}","","module.exports = {","  pair: pair,","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"12":0,"14":0,"15":0,"17":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/string.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"fromCode","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}}},"2":{"name":"toCode","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":35}},"6":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":69}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":86}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":90}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":96}},"13":{"start":{"line":47,"column":0},"end":{"line":47,"column":100}},"14":{"start":{"line":49,"column":0},"end":{"line":56,"column":2}}},"branchMap":{},"code":["\"use strict\";","","var array = require(\"./array.js\");","var primitive = require(\"./primitive.js\");","var utils = require(\"./utils.js\");","","/**","  ### Arbitrary strings","*/","","function fromCode(code) {","  return String.fromCharCode(code);","}","","function toCode(c) {","  return c.charCodeAt(0);","}","","/**","  - `char: arbitrary char` &mdash; Single character","*/","var char = primitive.nat(0xff).smap(fromCode, toCode);","","/**","  - `asciichar: arbitrary char` &mdash; Single ascii character (0x20-0x7e inclusive, no DEL)","*/","var asciichar = primitive.integer(0x20, 0x7e).smap(fromCode, toCode);","","/**","  - `string: arbitrary string`","*/","var string = array.array(char).smap(utils.charArrayToString, utils.stringToCharArray);","","/**","  - `nestring: arbitrary string` &mdash; Generates strings which are not empty.","*/","var nestring = array.nearray(char).smap(utils.charArrayToString, utils.stringToCharArray);","","/**","  - `asciistring: arbitrary string`","*/","var asciistring = array.array(asciichar).smap(utils.charArrayToString, utils.stringToCharArray);","","/**","  - `asciinestring: arbitrary string`","*/","var asciinestring = array.nearray(asciichar).smap(utils.charArrayToString, utils.stringToCharArray);","","module.exports = {","  char: char,","  asciichar: asciichar,","  string: string,","  nestring: nestring,","  asciistring: asciistring,","  asciinestring: asciinestring,","};",""],"l":{"3":1,"4":1,"5":1,"11":1,"12":0,"15":1,"16":0,"22":1,"27":1,"32":1,"37":1,"42":1,"47":1,"49":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/primitive.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/primitive.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4,"10":4,"11":4,"12":4,"13":4,"14":1,"15":2,"16":6,"17":4,"18":4,"19":0,"20":4,"21":0,"22":4,"23":2,"24":0,"25":2,"26":1,"27":5,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":5,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":1},"b":{"1":[4,2],"2":[0,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,1],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":4,"2":2,"3":6,"4":0,"5":0,"6":5,"7":0,"8":0,"9":5,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1},"fnMap":{"1":{"name":"extendWithDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}}},"2":{"name":"numeric","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":23}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":37}}},"4":{"name":"to","line":28,"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":30}}},"5":{"name":"from","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":34}}},"6":{"name":"integer","line":51,"loc":{"start":{"line":51,"column":22},"end":{"line":51,"column":48}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":31},"end":{"line":53,"column":47}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":25},"end":{"line":57,"column":38}}},"9":{"name":"nat","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":22}}},"10":{"name":"(anonymous_10)","line":91,"loc":{"start":{"line":91,"column":31},"end":{"line":91,"column":47}}},"11":{"name":"(anonymous_11)","line":95,"loc":{"start":{"line":95,"column":25},"end":{"line":95,"column":38}}},"12":{"name":"number","line":121,"loc":{"start":{"line":121,"column":21},"end":{"line":121,"column":46}}},"13":{"name":"(anonymous_13)","line":123,"loc":{"start":{"line":123,"column":31},"end":{"line":123,"column":47}}},"14":{"name":"(anonymous_14)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":38}}},"15":{"name":"(anonymous_15)","line":166,"loc":{"start":{"line":166,"column":29},"end":{"line":166,"column":51}}},"16":{"name":"(anonymous_16)","line":171,"loc":{"start":{"line":171,"column":23},"end":{"line":171,"column":36}}},"17":{"name":"datetime","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":28}}},"18":{"name":"toDateFn","line":191,"loc":{"start":{"line":191,"column":13},"end":{"line":191,"column":34}}},"19":{"name":"fromDateFn","line":194,"loc":{"start":{"line":194,"column":15},"end":{"line":194,"column":38}}},"20":{"name":"toDateFn","line":203,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":34}}},"21":{"name":"elements","line":223,"loc":{"start":{"line":223,"column":0},"end":{"line":223,"column":24}}},"22":{"name":"(anonymous_22)","line":227,"loc":{"start":{"line":227,"column":31},"end":{"line":227,"column":53}}},"23":{"name":"(anonymous_23)","line":232,"loc":{"start":{"line":232,"column":25},"end":{"line":232,"column":38}}},"24":{"name":"(anonymous_24)","line":250,"loc":{"start":{"line":250,"column":13},"end":{"line":250,"column":26}}},"25":{"name":"constant","line":267,"loc":{"start":{"line":267,"column":0},"end":{"line":267,"column":21}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"8":{"start":{"line":16,"column":0},"end":{"line":22,"column":1}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"10":{"start":{"line":18,"column":2},"end":{"line":18,"column":32}},"11":{"start":{"line":19,"column":2},"end":{"line":19,"column":26}},"12":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}},"14":{"start":{"line":24,"column":0},"end":{"line":42,"column":1}},"15":{"start":{"line":25,"column":2},"end":{"line":41,"column":4}},"16":{"start":{"line":26,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":27,"column":6},"end":{"line":27,"column":56}},"18":{"start":{"line":28,"column":6},"end":{"line":30,"column":8}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"20":{"start":{"line":31,"column":6},"end":{"line":33,"column":8}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"22":{"start":{"line":35,"column":6},"end":{"line":35,"column":32}},"23":{"start":{"line":36,"column":11},"end":{"line":40,"column":5}},"24":{"start":{"line":37,"column":6},"end":{"line":37,"column":60}},"25":{"start":{"line":39,"column":6},"end":{"line":39,"column":36}},"26":{"start":{"line":51,"column":0},"end":{"line":79,"column":3}},"27":{"start":{"line":52,"column":2},"end":{"line":78,"column":4}},"28":{"start":{"line":54,"column":6},"end":{"line":54,"column":52}},"29":{"start":{"line":55,"column":6},"end":{"line":55,"column":33}},"30":{"start":{"line":58,"column":6},"end":{"line":58,"column":74}},"31":{"start":{"line":60,"column":6},"end":{"line":60,"column":22}},"32":{"start":{"line":61,"column":6},"end":{"line":74,"column":7}},"33":{"start":{"line":62,"column":8},"end":{"line":62,"column":18}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":22}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":30}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":31}},"37":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"38":{"start":{"line":68,"column":10},"end":{"line":68,"column":22}},"39":{"start":{"line":69,"column":10},"end":{"line":69,"column":23}},"40":{"start":{"line":70,"column":10},"end":{"line":70,"column":41}},"41":{"start":{"line":71,"column":10},"end":{"line":71,"column":17}},"42":{"start":{"line":73,"column":8},"end":{"line":73,"column":19}},"43":{"start":{"line":81,"column":0},"end":{"line":81,"column":27}},"44":{"start":{"line":89,"column":0},"end":{"line":110,"column":1}},"45":{"start":{"line":90,"column":2},"end":{"line":109,"column":5}},"46":{"start":{"line":92,"column":6},"end":{"line":92,"column":52}},"47":{"start":{"line":93,"column":6},"end":{"line":93,"column":29}},"48":{"start":{"line":96,"column":6},"end":{"line":96,"column":70}},"49":{"start":{"line":98,"column":6},"end":{"line":98,"column":19}},"50":{"start":{"line":99,"column":6},"end":{"line":99,"column":28}},"51":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"52":{"start":{"line":101,"column":6},"end":{"line":105,"column":7}},"53":{"start":{"line":102,"column":8},"end":{"line":102,"column":20}},"54":{"start":{"line":103,"column":8},"end":{"line":103,"column":39}},"55":{"start":{"line":104,"column":8},"end":{"line":104,"column":15}},"56":{"start":{"line":106,"column":6},"end":{"line":106,"column":17}},"57":{"start":{"line":112,"column":0},"end":{"line":112,"column":23}},"58":{"start":{"line":121,"column":0},"end":{"line":138,"column":3}},"59":{"start":{"line":122,"column":2},"end":{"line":137,"column":4}},"60":{"start":{"line":124,"column":6},"end":{"line":124,"column":52}},"61":{"start":{"line":125,"column":6},"end":{"line":125,"column":40}},"62":{"start":{"line":128,"column":6},"end":{"line":128,"column":73}},"63":{"start":{"line":130,"column":6},"end":{"line":134,"column":7}},"64":{"start":{"line":131,"column":8},"end":{"line":131,"column":34}},"65":{"start":{"line":133,"column":8},"end":{"line":133,"column":18}},"66":{"start":{"line":140,"column":0},"end":{"line":140,"column":26}},"67":{"start":{"line":147,"column":0},"end":{"line":147,"column":22}},"68":{"start":{"line":148,"column":0},"end":{"line":148,"column":25}},"69":{"start":{"line":149,"column":0},"end":{"line":149,"column":29}},"70":{"start":{"line":156,"column":0},"end":{"line":156,"column":32}},"71":{"start":{"line":157,"column":0},"end":{"line":157,"column":37}},"72":{"start":{"line":158,"column":0},"end":{"line":158,"column":45}},"73":{"start":{"line":165,"column":0},"end":{"line":176,"column":3}},"74":{"start":{"line":167,"column":4},"end":{"line":167,"column":25}},"75":{"start":{"line":168,"column":4},"end":{"line":168,"column":19}},"76":{"start":{"line":172,"column":4},"end":{"line":172,"column":75}},"77":{"start":{"line":173,"column":4},"end":{"line":173,"column":37}},"78":{"start":{"line":183,"column":0},"end":{"line":183,"column":34}},"79":{"start":{"line":185,"column":0},"end":{"line":214,"column":1}},"80":{"start":{"line":186,"column":2},"end":{"line":186,"column":13}},"81":{"start":{"line":187,"column":2},"end":{"line":187,"column":15}},"82":{"start":{"line":188,"column":2},"end":{"line":188,"column":10}},"83":{"start":{"line":190,"column":2},"end":{"line":213,"column":3}},"84":{"start":{"line":191,"column":4},"end":{"line":193,"column":6}},"85":{"start":{"line":192,"column":6},"end":{"line":192,"column":25}},"86":{"start":{"line":194,"column":4},"end":{"line":196,"column":6}},"87":{"start":{"line":195,"column":6},"end":{"line":195,"column":25}},"88":{"start":{"line":197,"column":4},"end":{"line":197,"column":26}},"89":{"start":{"line":198,"column":4},"end":{"line":198,"column":22}},"90":{"start":{"line":199,"column":4},"end":{"line":199,"column":27}},"91":{"start":{"line":201,"column":4},"end":{"line":201,"column":38}},"92":{"start":{"line":203,"column":4},"end":{"line":205,"column":6}},"93":{"start":{"line":204,"column":6},"end":{"line":204,"column":53}},"94":{"start":{"line":206,"column":4},"end":{"line":206,"column":17}},"95":{"start":{"line":208,"column":4},"end":{"line":212,"column":7}},"96":{"start":{"line":216,"column":0},"end":{"line":216,"column":28}},"97":{"start":{"line":223,"column":0},"end":{"line":242,"column":1}},"98":{"start":{"line":224,"column":2},"end":{"line":224,"column":73}},"99":{"start":{"line":226,"column":2},"end":{"line":241,"column":5}},"100":{"start":{"line":228,"column":6},"end":{"line":228,"column":41}},"101":{"start":{"line":229,"column":6},"end":{"line":229,"column":21}},"102":{"start":{"line":233,"column":6},"end":{"line":233,"column":32}},"103":{"start":{"line":234,"column":6},"end":{"line":238,"column":7}},"104":{"start":{"line":235,"column":8},"end":{"line":235,"column":18}},"105":{"start":{"line":237,"column":8},"end":{"line":237,"column":34}},"106":{"start":{"line":249,"column":0},"end":{"line":249,"column":59}},"107":{"start":{"line":250,"column":0},"end":{"line":260,"column":2}},"108":{"start":{"line":251,"column":2},"end":{"line":259,"column":3}},"109":{"start":{"line":252,"column":4},"end":{"line":252,"column":24}},"110":{"start":{"line":253,"column":9},"end":{"line":259,"column":3}},"111":{"start":{"line":254,"column":4},"end":{"line":254,"column":33}},"112":{"start":{"line":255,"column":9},"end":{"line":259,"column":3}},"113":{"start":{"line":256,"column":4},"end":{"line":256,"column":30}},"114":{"start":{"line":258,"column":4},"end":{"line":258,"column":25}},"115":{"start":{"line":267,"column":0},"end":{"line":273,"column":1}},"116":{"start":{"line":268,"column":2},"end":{"line":272,"column":5}},"117":{"start":{"line":275,"column":0},"end":{"line":290,"column":2}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":11}},{"start":{"line":36,"column":11},"end":{"line":36,"column":11}}]},"3":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":37},"end":{"line":54,"column":41}},{"start":{"line":54,"column":44},"end":{"line":54,"column":51}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"5":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":37},"end":{"line":92,"column":41}},{"start":{"line":92,"column":44},"end":{"line":92,"column":51}}]},"6":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":37},"end":{"line":124,"column":41}},{"start":{"line":124,"column":44},"end":{"line":124,"column":51}}]},"7":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"8":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":11},"end":{"line":172,"column":21}},{"start":{"line":172,"column":25},"end":{"line":172,"column":36}}]},"9":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":24},"end":{"line":173,"column":31}},{"start":{"line":173,"column":34},"end":{"line":173,"column":36}}]},"10":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"11":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":6}},{"start":{"line":234,"column":6},"end":{"line":234,"column":6}}]},"12":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"13":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":9},"end":{"line":253,"column":9}},{"start":{"line":253,"column":9},"end":{"line":253,"column":9}}]},"14":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":9},"end":{"line":255,"column":9}},{"start":{"line":255,"column":9},"end":{"line":255,"column":9}}]}},"code":["/* @flow weak */","\"use strict\";","","var arbitraryBless = require(\"./arbitraryBless\");","var assert = require(\"assert\");","var generator = require(\"./generator.js\");","var random = require(\"./random.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var utils = require(\"./utils.js\");","","/**","  ### Primitive arbitraries","*/","","function extendWithDefault(arb) {","  var def = arb();","  arb.generator = def.generator;","  arb.shrink = def.shrink;","  arb.show = def.show;","  arb.smap = def.smap;","}","","function numeric(impl) {","  return function (minsize, maxsize) {","    if (arguments.length === 2) {","      var arb = arbitraryBless(impl(maxsize - minsize));","      var to = function to(x) {","        return Math.abs(x) + minsize;","      };","      var from = function from(x) {","        return x - minsize;","      };","","      return arb.smap(to, from);","    } else if (arguments.length === 1) {","      return arbitraryBless(impl(minsize /* as maxsize */));","    } else {","      return arbitraryBless(impl());","    }","  };","}","","/**","  - `integer: arbitrary integer`","  - `integer(maxsize: nat): arbitrary integer`","  - `integer(minsize: integer, maxsize: integer): arbitrary integer`","","      Integers, ℤ","*/","var integer = numeric(function integer(maxsize) {","  return {","    generator: generator.bless(function (size) {","      size = maxsize === undefined ? size : maxsize;","      return random(-size, size);","    }),","    shrink: shrink.bless(function (i) {","      assert(typeof i === \"number\", \"integer.shrink have to be a number\");","","      i = Math.abs(i);","      if (i === 0) {","        return [];","      } else {","        var arr = [0];","        var j = utils.div2(i);","        var k = Math.max(j, 1);","        while (j < i) {","          arr.push(j);","          arr.push(-j);","          k = Math.max(utils.div2(k), 1);","          j += k;","        }","        return arr;","      }","    }),","","    show: show.def,","  };","});","","extendWithDefault(integer);","","/**","  - `nat: arbitrary nat`","  - `nat(maxsize: nat): arbitrary nat`","","      Natural numbers, ℕ (0, 1, 2...)","*/","function nat(maxsize) {","  return arbitraryBless({","    generator: generator.bless(function (size) {","      size = maxsize === undefined ? size : maxsize;","      return random(0, size);","    }),","    shrink: shrink.bless(function (i) {","      assert(typeof i === \"number\", \"nat.shrink have to be a number\");","","      var arr = [];","      var j = utils.div2(i);","      var k = Math.max(j, 1);","      while (j < i) {","        arr.push(j);","        k = Math.max(utils.div2(k), 1);","        j += k;","      }","      return arr;","    }),","    show: show.def,","  });","}","","extendWithDefault(nat);","","/**","  - `number: arbitrary number`","  - `number(maxsize: number): arbitrary number`","  - `number(min: number, max: number): arbitrary number`","","      JavaScript numbers, \"doubles\", ℝ. `NaN` and `Infinity` are not included.","*/","var number = numeric(function number(maxsize) {","  return {","    generator: generator.bless(function (size) {","      size = maxsize === undefined ? size : maxsize;","      return random.number(-size, size);","    }),","    shrink: shrink.bless(function (x) {","      assert(typeof x === \"number\", \"number.shrink have to be a number\");","","      if (Math.abs(x) > 1e-6) {","        return [0, x / 2, -x / 2];","      } else {","        return [];","      }","    }),","    show: show.def,","  };","});","","extendWithDefault(number);","","/**","  - `uint8: arbitrary nat`","  - `uint16: arbitrary nat`","  - `uint32: arbitrary nat`","*/","var uint8 = nat(0xff);","var uint16 = nat(0xffff);","var uint32 = nat(0xffffffff);","","/**","  - `int8: arbitrary integer`","  - `int16: arbitrary integer`","  - `int32: arbitrary integer`","*/","var int8 = integer(-0x80, 0x7f);","var int16 = integer(-0x8000, 0x7fff);","var int32 = integer(-0x80000000, 0x7fffffff);","","/**","  - `bool: arbitrary bool`","","      Booleans, `true` or `false`.","*/","var bool = arbitraryBless({","  generator: generator.bless(function (/* size */) {","    var i = random(0, 1);","    return i === 1;","  }),","","  shrink: shrink.bless(function (b) {","    assert(b === true || b === false, \"bool.shrink excepts true or false\");","    return b === true ? [false] : [];","  }),","  show: show.def,","});","","/**","  - `datetime: arbitrary datetime`","","      Random datetime","*/","var datetimeConst = 1416499879495; // arbitrary datetime","","function datetime(from, to) {","  var toDate;","  var fromDate;","  var arb;","","  if (arguments.length === 2) {","    toDate = function toDateFn(x) {","      return new Date(x);","    };","    fromDate = function fromDateFn(x) {","      return x.getTime();","    };","    from = fromDate(from);","    to = fromDate(to);","    arb = number(from, to);","","    return arb.smap(toDate, fromDate);","  } else {","    toDate = function toDateFn(x) {","      return new Date(x * 768000000 + datetimeConst);","    };","    arb = number;","","    return arbitraryBless({","      generator: arb.generator.map(toDate),","      shrink: shrink.noop,","      show: show.def,","    });","  }","}","","extendWithDefault(datetime);","","/**","  - `elements(args: array a): arbitrary a`","","      Random element of `args` array.","*/","function elements(args) {","  assert(args.length !== 0, \"elements: at least one parameter expected\");","","  return arbitraryBless({","    generator: generator.bless(function (/* size */) {","      var i = random(0, args.length - 1);","      return args[i];","    }),","","    shrink: shrink.bless(function (x) {","      var idx = args.indexOf(x);","      if (idx <= 0) {","        return [];","      } else {","        return args.slice(0, idx);","      }","    }),","    show: show.def,","  });","}","","/**","  - `falsy: arbitrary *`","","      Generates falsy values: `false`, `null`, `undefined`, `\"\"`, `0`, and `NaN`.","*/","var falsy = elements([false, null, undefined, \"\", 0, NaN]);","falsy.show = function (v) {","  if (v !== v) {","    return \"falsy: NaN\";","  } else if (v === \"\") {","    return \"falsy: empty string\";","  } else if (v === undefined) {","    return \"falsy: undefined\";","  } else {","    return \"falsy: \" + v;","  }","};","","/**","  - `constant(x: a): arbitrary a`","","      Returns an unshrinkable arbitrary that yields the given object.","*/","function constant(x) {","  return arbitraryBless({","    generator: generator.constant(x),","    shrink: shrink.noop,","    show: show.def,","  });","}","","module.exports = {","  integer: integer,","  nat: nat,","  int8: int8,","  int16: int16,","  int32: int32,","  uint8: uint8,","  uint16: uint16,","  uint32: uint32,","  number: number,","  elements: elements,","  bool: bool,","  falsy: falsy,","  constant: constant,","  datetime: datetime,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"16":1,"17":4,"18":4,"19":4,"20":4,"21":4,"24":1,"25":2,"26":6,"27":4,"28":4,"29":0,"31":4,"32":0,"35":4,"36":2,"37":0,"39":2,"51":1,"52":5,"54":0,"55":0,"58":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"81":1,"89":1,"90":5,"92":0,"93":0,"96":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"112":1,"121":1,"122":1,"124":0,"125":0,"128":0,"130":0,"131":0,"133":0,"140":1,"147":1,"148":1,"149":1,"156":1,"157":1,"158":1,"165":1,"167":0,"168":0,"172":0,"173":0,"183":1,"185":1,"186":1,"187":1,"188":1,"190":1,"191":0,"192":0,"194":0,"195":0,"197":0,"198":0,"199":0,"201":0,"203":1,"204":0,"206":1,"208":1,"216":1,"223":1,"224":1,"226":1,"228":0,"229":0,"233":0,"234":0,"235":0,"237":0,"249":1,"250":1,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"258":0,"267":1,"268":1,"275":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/json.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/json.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":1},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":17}}},"2":{"name":"shrinkRecJson","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":29}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":26},"end":{"line":46,"column":42}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":18},"end":{"line":61,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":44}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"16":{"start":{"line":22,"column":0},"end":{"line":32,"column":5}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":72}},"18":{"start":{"line":35,"column":0},"end":{"line":35,"column":19}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":15}},"20":{"start":{"line":38,"column":0},"end":{"line":44,"column":1}},"21":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":42}},"23":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"24":{"start":{"line":46,"column":0},"end":{"line":59,"column":3}},"25":{"start":{"line":47,"column":2},"end":{"line":47,"column":37}},"26":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"27":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"28":{"start":{"line":53,"column":2},"end":{"line":58,"column":3}},"29":{"start":{"line":54,"column":20},"end":{"line":54,"column":55}},"30":{"start":{"line":55,"column":19},"end":{"line":55,"column":56}},"31":{"start":{"line":56,"column":19},"end":{"line":56,"column":53}},"32":{"start":{"line":57,"column":13},"end":{"line":57,"column":40}},"33":{"start":{"line":61,"column":0},"end":{"line":66,"column":5}},"34":{"start":{"line":62,"column":2},"end":{"line":62,"column":65}},"35":{"start":{"line":63,"column":2},"end":{"line":63,"column":45}},"36":{"start":{"line":65,"column":2},"end":{"line":65,"column":72}},"37":{"start":{"line":68,"column":0},"end":{"line":72,"column":3}},"38":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"3":{"line":53,"type":"switch","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":55}},{"start":{"line":55,"column":4},"end":{"line":55,"column":56}},{"start":{"line":56,"column":4},"end":{"line":56,"column":53}},{"start":{"line":57,"column":4},"end":{"line":57,"column":40}}]}},"code":["\"use strict\";","","var assert = require(\"assert\");","","var arbitraryBless = require(\"./arbitraryBless.js\");","var dict = require(\"./dict.js\");","var generator = require(\"./generator.js\");","var primitive = require(\"./primitive.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","var string = require(\"./string.js\");","var utils = require(\"./utils.js\");","","var nullArb = primitive.constant(null);","","var generateInteger = primitive.integer.generator;","var generateNumber = primitive.number.generator;","var generateBool = primitive.bool.generator;","var generateString = string.string.generator;","var generateNull = nullArb.generator;","","var generateJson = generator.recursive(","  generator.oneof([","    generateInteger,","    generateNumber,","    generateBool,","    generateString,","    generateNull,","  ]),","  function (gen) {","    return generator.oneof([generator.array(gen), dict.generator(gen)]);","  });","","// Forward declaration","var shrinkDictJson;","var shrinkJson;","","function shrinkRecJson(json) {","  if (Array.isArray(json)) {","    return shrink.array(shrinkJson, json);","  } else {","    return shrinkDictJson(json);","  }","}","","shrinkJson = shrink.bless(function (json) {","  assert(typeof json !== \"function\");","","  if (json === null) {","    return nullArb.shrink(json);","  }","","  switch (typeof json) {","    case \"boolean\": return primitive.bool.shrink(json);","    case \"number\": return primitive.number.shrink(json);","    case \"string\": return string.string.shrink(json);","    default: return shrinkRecJson(json);","  }","});","","shrinkDictJson = (function () {","  var pairShrink = shrink.pair(string.string.shrink, shrinkJson);","  var arrayShrink = shrink.array(pairShrink);","","  return arrayShrink.smap(utils.pairArrayToDict, utils.dictToPairArray);","}());","","var json = arbitraryBless({","  generator: generateJson,","  shrink: shrinkJson,","  show: show.def,","});","","module.exports = {","  json: json,","};",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"31":0,"35":1,"36":1,"38":1,"39":0,"40":0,"42":0,"46":1,"47":0,"49":0,"50":0,"53":0,"54":0,"55":0,"56":0,"57":0,"61":1,"62":1,"63":1,"65":1,"68":1,"74":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/bless.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/bless.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"bless","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":29,"column":0},"end":{"line":48,"column":1}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":84}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":91}},"9":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"10":{"start":{"line":35,"column":4},"end":{"line":35,"column":29}},"11":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":24}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":33}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":27}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":13}},"17":{"start":{"line":50,"column":0},"end":{"line":50,"column":23}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":21}},{"start":{"line":30,"column":25},"end":{"line":30,"column":48}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["\"use strict\";","","var assert = require(\"assert\");","","var arbitraryBless = require(\"./arbitraryBless.js\");","var generator = require(\"./generator.js\");","var show = require(\"./show.js\");","var shrink = require(\"./shrink.js\");","","/**","  - `bless(arb: {...}): arbitrary a`","","    Bless almost arbitrary structure to be proper arbitrary. *Note*: this function mutates argument.","","    #### Example:","","    ```js","    var arbTokens = jsc.bless({","      generator: function () {","        switch (jsc.random(0, 2)) {","          case 0: return \"foo\";","          case 1: return \"bar\";","          case 2: return \"quux\";","        }","      }","    });","    ```","*/","function bless(arb) {","  assert(arb !== null && typeof arb === \"object\", \"bless: arb should be an object\");","  assert(typeof arb.generator === \"function\", \"bless: arb.generator should be a function\");","","  // default shrink","  if (typeof arb.shrink !== \"function\") {","    arb.shrink = shrink.noop;","  }","","  // default show","  if (typeof arb.show !== \"function\") {","    arb.show = show.def;","  }","","  generator.bless(arb.generator);","  shrink.bless(arb.shrink);","","  arbitraryBless(arb);","  return arb;","}","","module.exports = bless;",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"29":1,"30":0,"31":0,"34":0,"35":0,"39":0,"40":0,"43":0,"44":0,"46":0,"47":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/record.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/record.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"generatorRecord","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":31},"end":{"line":13,"column":47}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":30}}},"4":{"name":"shrinkRecord","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":38}}},"6":{"name":"(anonymous_6)","line":31,"loc":{"start":{"line":31,"column":28},"end":{"line":31,"column":43}}},"7":{"name":"(anonymous_7)","line":32,"loc":{"start":{"line":32,"column":26},"end":{"line":32,"column":39}}},"8":{"name":"(anonymous_8)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":37}}},"9":{"name":"(anonymous_9)","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":35}}},"10":{"name":"arbitraryRecord","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"11":{"name":"(anonymous_11)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":41}}},"12":{"name":"(anonymous_12)","line":62,"loc":{"start":{"line":62,"column":10},"end":{"line":62,"column":23}}},"13":{"name":"(anonymous_13)","line":63,"loc":{"start":{"line":63,"column":38},"end":{"line":63,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":11,"column":0},"end":{"line":22,"column":1}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"7":{"start":{"line":13,"column":2},"end":{"line":19,"column":5}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"9":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":29}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":43}},"13":{"start":{"line":27,"column":0},"end":{"line":45,"column":1}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":40}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":68}},"16":{"start":{"line":29,"column":40},"end":{"line":29,"column":64}},"17":{"start":{"line":31,"column":2},"end":{"line":42,"column":5}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":59}},"19":{"start":{"line":32,"column":41},"end":{"line":32,"column":55}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":49}},"21":{"start":{"line":35,"column":4},"end":{"line":41,"column":7}},"22":{"start":{"line":36,"column":6},"end":{"line":36,"column":19}},"23":{"start":{"line":37,"column":6},"end":{"line":39,"column":9}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"25":{"start":{"line":40,"column":6},"end":{"line":40,"column":17}},"26":{"start":{"line":44,"column":2},"end":{"line":44,"column":43}},"27":{"start":{"line":47,"column":0},"end":{"line":68,"column":1}},"28":{"start":{"line":48,"column":2},"end":{"line":48,"column":25}},"29":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"30":{"start":{"line":50,"column":2},"end":{"line":50,"column":20}},"31":{"start":{"line":52,"column":2},"end":{"line":57,"column":5}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":35}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":37}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":27}},"36":{"start":{"line":59,"column":2},"end":{"line":67,"column":5}},"37":{"start":{"line":63,"column":6},"end":{"line":65,"column":26}},"38":{"start":{"line":64,"column":8},"end":{"line":64,"column":44}},"39":{"start":{"line":70,"column":0},"end":{"line":74,"column":2}}},"branchMap":{},"code":["\"use strict\";","","var arbitraryBless = require(\"./arbitraryBless.js\");","var generator = require(\"./generator.js\");","var utils = require(\"./utils.js\");","var shrink = require(\"./shrink.js\");","","/**","  - `generator.record(gen: { key: generator a... }): generator { key: a... }`","*/","function generatorRecord(spec) {","  var keys = Object.keys(spec);","  var result = generator.bless(function (size) {","    var res = {};","    keys.forEach(function (k) {","      res[k] = spec[k](size);","    });","    return res;","  });","","  return utils.curried2(result, arguments);","}","","/**","  - `shrink.record(shrs: { key: shrink a... }): shrink { key: a... }`","*/","function shrinkRecord(shrinksRecord) {","  var keys = Object.keys(shrinksRecord);","  var shrinks = keys.map(function (k) { return shrinksRecord[k]; });","","  var result = shrink.bless(function (rec) {","    var values = keys.map(function (k) { return rec[k]; });","    var shrinked = shrink.tuple(shrinks, values);","","    return shrinked.map(function (s) {","      var res = {};","      keys.forEach(function (k, i) {","        res[k] = s[i];","      });","      return res;","    });","  });","","  return utils.curried2(result, arguments);","}","","function arbitraryRecord(spec) {","  var generatorSpec = {};","  var shrinkSpec = {};","  var showSpec = {};","","  Object.keys(spec).forEach(function (k) {","    var arb = utils.force(spec[k]);","    generatorSpec[k] = arb.generator;","    shrinkSpec[k] = arb.shrink;","    showSpec[k] = arb.show;","  });","","  return arbitraryBless({","    generator: generatorRecord(generatorSpec),","    shrink: shrinkRecord(shrinkSpec),","    show: function (m) {","      return \"{\" + Object.keys(m).map(function (k) {","        return k + \": \" + showSpec[k](m[k]);","      }).join(\", \") + \"}\";","    },","  });","}","","module.exports = {","  generator: generatorRecord,","  arbitrary: arbitraryRecord,","  shrink: shrinkRecord,","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"21":0,"27":1,"28":0,"29":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"40":0,"44":0,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"59":0,"63":0,"64":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/recordWithEnv.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/recordWithEnv.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"recordWithEnv","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":28},"end":{"line":19,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":15,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":70}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":22}},"8":{"start":{"line":19,"column":2},"end":{"line":22,"column":5}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":81}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":22},"end":{"line":16,"column":55}},{"start":{"line":16,"column":58},"end":{"line":16,"column":69}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":46},"end":{"line":21,"column":74}},{"start":{"line":21,"column":77},"end":{"line":21,"column":80}}]}},"code":["\"use strict\";","","var environment = require(\"./environment.js\");","var record = require(\"./record.js\");","var typify = require(\"./typify.js\");","var utils = require(\"./utils.js\");","","/**","  ### Arbitrary records","","  - `record(spec: { key: arbitrary a... }, userenv: env?): arbitrary { key: a... }`","","      Generates a javascript object with given record spec.","*/","function recordWithEnv(spec, userenv) {","  var env = userenv ? utils.merge(environment, userenv) : environment;","","  var parsedSpec = {};","  Object.keys(spec).forEach(function (k) {","    var arb = spec[k];","    parsedSpec[k] = typeof arb === \"string\" ? typify.parseTypify(env, arb) : arb;","  });","","  return record.arbitrary(parsedSpec);","}","","module.exports = recordWithEnv;",""],"l":{"3":1,"4":1,"5":1,"6":1,"15":1,"16":0,"18":0,"19":0,"20":0,"21":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/environment.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/environment.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"7":{"start":{"line":11,"column":0},"end":{"line":23,"column":3}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}}},"branchMap":{},"code":["/* @flow weak */","\"use strict\";","","var arbitrary = require(\"./arbitrary.js\");","var fn = require(\"./fn.js\");","var primitive = require(\"./primitive.js\");","var small = require(\"./small.js\");","var string = require(\"./string.js\");","var utils = require(\"./utils.js\");","","var environment = utils.merge(primitive, string, {","  pair: arbitrary.pair,","  unit: arbitrary.unit,","  either: arbitrary.either,","  dict: arbitrary.dict,","  array: arbitrary.array,","  nearray: arbitrary.nearray,","  json: arbitrary.json,","  fn: fn.fn,","  fun: fn.fn,","  nonshrink: arbitrary.nonshrink,","  small: small.arbitrary,","});","","module.exports = environment;",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/fn.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/fn.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"fn","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":17}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":31},"end":{"line":22,"column":47}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":29}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":23}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":42},"end":{"line":40,"column":58}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"7":{"start":{"line":18,"column":0},"end":{"line":45,"column":1}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"9":{"start":{"line":21,"column":2},"end":{"line":44,"column":5}},"10":{"start":{"line":23,"column":6},"end":{"line":23,"column":25}},"11":{"start":{"line":25,"column":6},"end":{"line":32,"column":8}},"12":{"start":{"line":26,"column":8},"end":{"line":29,"column":9}},"13":{"start":{"line":27,"column":10},"end":{"line":27,"column":42}},"14":{"start":{"line":28,"column":10},"end":{"line":28,"column":31}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"16":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"17":{"start":{"line":35,"column":6},"end":{"line":35,"column":15}},"18":{"start":{"line":40,"column":6},"end":{"line":42,"column":26}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":55}},"20":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":20},"end":{"line":19,"column":23}},{"start":{"line":19,"column":27},"end":{"line":19,"column":36}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]}},"code":["/* @flow weak */","\"use strict\";","","var arbitraryBless = require(\"./arbitraryBless.js\");","var generator = require(\"./generator.js\");","var FMap = require(\"./finitemap.js\");","var json = require(\"./json.js\");","var shrink = require(\"./shrink.js\");","var utils = require(\"./utils.js\");","","/**","  ### Arbitrary functions","","  - `fn(arb: arbitrary a): arbitrary (b -> a)`","  - `fun(arb: arbitrary a): arbitrary (b -> a)`","*/","","function fn(arb) {","  arb = utils.force(arb || json.json);","","  return arbitraryBless({","    generator: generator.bless(function (size) {","      var m = new FMap();","","      var f = function (arg) {","        if (!m.contains(arg)) {","          var value = arb.generator(size);","          m.insert(arg, value);","        }","","        return m.get(arg);","      };","","      f.internalMap = m;","      return f;","    }),","","    shrink: shrink.noop,","    show: function (f) {","      return \"[\" + f.internalMap.data.map(function (item) {","        return \"\" + item[0] + \": \" + arb.show(item[1]);","      }).join(\", \") + \"]\";","    },","  });","}","","module.exports = {","  fn: fn,","  fun: fn,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"18":1,"19":0,"21":0,"23":0,"25":0,"26":0,"27":0,"28":0,"31":0,"34":0,"35":0,"40":0,"41":0,"47":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/finitemap.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/finitemap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"FMap","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":18}}},"2":{"name":"FMapContains","line":22,"loc":{"start":{"line":22,"column":26},"end":{"line":22,"column":53}}},"3":{"name":"FMapInsert","line":32,"loc":{"start":{"line":32,"column":24},"end":{"line":32,"column":56}}},"4":{"name":"FMapGet","line":43,"loc":{"start":{"line":43,"column":21},"end":{"line":43,"column":43}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"2":{"start":{"line":17,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":32}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":17}},"5":{"start":{"line":22,"column":0},"end":{"line":30,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"8":{"start":{"line":25,"column":6},"end":{"line":25,"column":18}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":15}},"10":{"start":{"line":32,"column":0},"end":{"line":41,"column":2}},"11":{"start":{"line":33,"column":2},"end":{"line":38,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":34}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":13}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":31}},"16":{"start":{"line":43,"column":0},"end":{"line":49,"column":2}},"17":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"18":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"19":{"start":{"line":46,"column":6},"end":{"line":46,"column":29}},"20":{"start":{"line":51,"column":0},"end":{"line":51,"column":22}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":14}},{"start":{"line":18,"column":18},"end":{"line":18,"column":31}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["/* @flow weak */","\"use strict\";","","var utils = require(\"./utils.js\");","","/*","  #### FMap (eq : a -> a -> bool) : FMap a","","  Finite map, with any object a key.","","  Short summary of member functions:","","  - FMap.insert (key : a) (value : any) : void","  - FMap.get (key : a) : any","  - FMap.contains (key : a) : obool","*/","function FMap(eq) {","  this.eq = eq || utils.isEqual;","  this.data = [];","}","","FMap.prototype.contains = function FMapContains(key) {","  for (var i = 0; i < this.data.length; i++) {","    if (this.eq(this.data[i][0], key)) {","      return true;","    }","  }","","  return false;","};","","FMap.prototype.insert = function FMapInsert(key, value) {","  for (var i = 0; i < this.data.length; i++) {","    if (this.eq(this.data[i][0], key)) {","      this.data[i] = [key, value];","      return;","    }","  }","","  this.data.push([key, value]);","};","","FMap.prototype.get = function FMapGet(key) { // eslint-disable-line consistent-return","  for (var i = 0; i < this.data.length; i++) {","    if (this.eq(this.data[i][0], key)) {","      return this.data[i][1];","    }","  }","};","","module.exports = FMap;",""],"l":{"4":1,"17":1,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"29":0,"32":1,"33":0,"34":0,"35":0,"36":0,"40":0,"43":1,"44":0,"45":0,"46":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/small.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/small.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"smallGenerator","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":25},"end":{"line":29,"column":41}}},"3":{"name":"smallArbitraryImpl","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":33}}},"4":{"name":"smallArbitrary","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":11},"end":{"line":45,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":34}},"8":{"start":{"line":34,"column":0},"end":{"line":41,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"10":{"start":{"line":36,"column":2},"end":{"line":40,"column":5}},"11":{"start":{"line":43,"column":0},"end":{"line":52,"column":1}},"12":{"start":{"line":44,"column":2},"end":{"line":51,"column":3}},"13":{"start":{"line":45,"column":4},"end":{"line":48,"column":6}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":45}},"15":{"start":{"line":47,"column":6},"end":{"line":47,"column":40}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":35}},"17":{"start":{"line":54,"column":0},"end":{"line":57,"column":2}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["\"use strict\";","","var generator = require(\"./generator.js\");","var arbitraryBless = require(\"./arbitraryBless.js\");","var arbitraryAssert = require(\"./arbitraryAssert.js\");","var utils = require(\"./utils.js\");","","/**","  ### Small arbitraries","","  - `generator.small(gen: generator a): generator a`","  - `small(arb: arbitrary a): arbitrary a`","","  Create a generator (abitrary) which will generate smaller values, i.e. generator's `size` parameter is decreased logarithmically.","","  ```js","  jsc.property(\"small array of small natural numbers\", \"small (array nat)\", function (arr) {","    return Array.isArray(arr);","  });","","  jsc.property(\"small array of normal natural numbers\", \"(small array) nat\", function (arr) {","    return Array.isArray(arr);","  });","  ```","*/","","function smallGenerator(gen) {","  // TODO: assertGenerator(gen)","  return generator.bless(function (size) {","    return gen(utils.ilog2(size));","  });","}","","function smallArbitraryImpl(arb) {","  arbitraryAssert(arb);","  return arbitraryBless({","    generator: smallGenerator(arb.generator),","    shrink: arb.shrink,","    show: arb.show,","  });","}","","function smallArbitrary(arb) {","  if (typeof arb === \"function\") {","    return function () {","      var resArb = arb.apply(arb, arguments);","      return smallArbitraryImpl(resArb);","    };","  } else { /* if (typeof arb === \"object\") */","    return smallArbitraryImpl(arb);","  }","}","","module.exports = {","  generator: smallGenerator,","  arbitrary: smallArbitrary,","};",""],"l":{"3":1,"4":1,"5":1,"6":1,"27":1,"29":0,"30":0,"34":1,"35":0,"36":0,"43":1,"44":0,"45":0,"46":0,"47":0,"50":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/typify.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/typify.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":1,"66":0,"67":0,"68":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"compileIdent","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}}},"2":{"name":"compileApplication","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":39}}},"3":{"name":"compileFunction","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"4":{"name":"compileBrackets","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"5":{"name":"compileDisjunction","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":39}}},"6":{"name":"compileConjunction","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":39}}},"7":{"name":"compileRecord","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":34}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":35},"end":{"line":76,"column":50}}},"9":{"name":"compileRecursive","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":37}}},"10":{"name":"(anonymous_10)","line":88,"loc":{"start":{"line":88,"column":43},"end":{"line":88,"column":56}}},"11":{"name":"(anonymous_11)","line":103,"loc":{"start":{"line":103,"column":42},"end":{"line":103,"column":57}}},"12":{"name":"compileTypeFn","line":111,"loc":{"start":{"line":111,"column":14},"end":{"line":111,"column":48}}},"13":{"name":"compileTypeArrayFn","line":126,"loc":{"start":{"line":126,"column":19},"end":{"line":126,"column":59}}},"14":{"name":"(anonymous_14)","line":127,"loc":{"start":{"line":127,"column":19},"end":{"line":127,"column":35}}},"15":{"name":"parseTypify","line":132,"loc":{"start":{"line":132,"column":0},"end":{"line":132,"column":31}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":25,"column":42}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":44}},"7":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":16}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":21}},"10":{"start":{"line":37,"column":0},"end":{"line":43,"column":1}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":26}},"12":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":56}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":11}},"15":{"start":{"line":45,"column":0},"end":{"line":50,"column":1}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":45}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":46}},"18":{"start":{"line":49,"column":2},"end":{"line":49,"column":39}},"19":{"start":{"line":52,"column":0},"end":{"line":56,"column":1}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":45}},"21":{"start":{"line":55,"column":2},"end":{"line":55,"column":23}},"22":{"start":{"line":58,"column":0},"end":{"line":61,"column":1}},"23":{"start":{"line":59,"column":2},"end":{"line":59,"column":39}},"24":{"start":{"line":60,"column":2},"end":{"line":60,"column":26}},"25":{"start":{"line":63,"column":0},"end":{"line":66,"column":1}},"26":{"start":{"line":64,"column":2},"end":{"line":64,"column":46}},"27":{"start":{"line":65,"column":2},"end":{"line":65,"column":29}},"28":{"start":{"line":68,"column":0},"end":{"line":71,"column":1}},"29":{"start":{"line":69,"column":2},"end":{"line":69,"column":46}},"30":{"start":{"line":70,"column":2},"end":{"line":70,"column":31}},"31":{"start":{"line":73,"column":0},"end":{"line":80,"column":1}},"32":{"start":{"line":75,"column":2},"end":{"line":75,"column":16}},"33":{"start":{"line":76,"column":2},"end":{"line":78,"column":5}},"34":{"start":{"line":77,"column":4},"end":{"line":77,"column":51}},"35":{"start":{"line":79,"column":2},"end":{"line":79,"column":32}},"36":{"start":{"line":82,"column":0},"end":{"line":109,"column":1}},"37":{"start":{"line":83,"column":2},"end":{"line":83,"column":93}},"38":{"start":{"line":86,"column":2},"end":{"line":86,"column":23}},"39":{"start":{"line":88,"column":2},"end":{"line":90,"column":5}},"40":{"start":{"line":89,"column":4},"end":{"line":89,"column":57}},"41":{"start":{"line":92,"column":2},"end":{"line":92,"column":24}},"42":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"43":{"start":{"line":95,"column":4},"end":{"line":95,"column":67}},"44":{"start":{"line":98,"column":2},"end":{"line":101,"column":5}},"45":{"start":{"line":103,"column":2},"end":{"line":108,"column":5}},"46":{"start":{"line":104,"column":4},"end":{"line":104,"column":20}},"47":{"start":{"line":105,"column":4},"end":{"line":105,"column":23}},"48":{"start":{"line":106,"column":4},"end":{"line":106,"column":42}},"49":{"start":{"line":107,"column":4},"end":{"line":107,"column":41}},"50":{"start":{"line":111,"column":0},"end":{"line":124,"column":2}},"51":{"start":{"line":112,"column":2},"end":{"line":123,"column":3}},"52":{"start":{"line":113,"column":18},"end":{"line":113,"column":49}},"53":{"start":{"line":114,"column":24},"end":{"line":114,"column":61}},"54":{"start":{"line":115,"column":21},"end":{"line":115,"column":55}},"55":{"start":{"line":116,"column":21},"end":{"line":116,"column":55}},"56":{"start":{"line":117,"column":24},"end":{"line":117,"column":61}},"57":{"start":{"line":118,"column":24},"end":{"line":118,"column":61}},"58":{"start":{"line":119,"column":19},"end":{"line":119,"column":51}},"59":{"start":{"line":120,"column":19},"end":{"line":120,"column":37}},"60":{"start":{"line":121,"column":22},"end":{"line":121,"column":57}},"61":{"start":{"line":122,"column":13},"end":{"line":122,"column":74}},"62":{"start":{"line":126,"column":0},"end":{"line":130,"column":2}},"63":{"start":{"line":127,"column":2},"end":{"line":129,"column":5}},"64":{"start":{"line":128,"column":4},"end":{"line":128,"column":34}},"65":{"start":{"line":132,"column":0},"end":{"line":135,"column":1}},"66":{"start":{"line":133,"column":2},"end":{"line":133,"column":31}},"67":{"start":{"line":134,"column":2},"end":{"line":134,"column":32}},"68":{"start":{"line":137,"column":0},"end":{"line":139,"column":2}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"2":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"3":{"line":112,"type":"switch","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":49}},{"start":{"line":114,"column":4},"end":{"line":114,"column":61}},{"start":{"line":115,"column":4},"end":{"line":115,"column":55}},{"start":{"line":116,"column":4},"end":{"line":116,"column":55}},{"start":{"line":117,"column":4},"end":{"line":117,"column":61}},{"start":{"line":118,"column":4},"end":{"line":118,"column":61}},{"start":{"line":119,"column":4},"end":{"line":119,"column":51}},{"start":{"line":120,"column":4},"end":{"line":120,"column":37}},{"start":{"line":121,"column":4},"end":{"line":121,"column":57}},{"start":{"line":122,"column":4},"end":{"line":122,"column":74}}]}},"code":["/* @flow weak */","\"use strict\";","","/**","  ### DSL for input parameters","","  There is a small DSL to help with `forall`. For example the two definitions below are equivalent:","  ```js","  var bool_fn_applied_thrice = jsc.forall(\"bool -> bool\", \"bool\", check);","  var bool_fn_applied_thrice = jsc.forall(jsc.fn(jsc.bool), jsc.bool, check);","  ```","","  The DSL is based on a subset of language recognized by [typify-parser](https://github.com/phadej/typify-parser):","  - *identifiers* are fetched from the predefined environment.","  - *applications* are applied as one could expect: `\"array bool\"` is evaluated to `jsc.array(jsc.bool)`.","  - *functions* are supported: `\"bool -> bool\"` is evaluated to `jsc.fn(jsc.bool)`.","  - *square brackets* are treated as a shorthand for the array type: `\"[nat]\"` is evaluated to `jsc.array(jsc.nat)`.","  - *union*: `\"bool | nat\"` is evaluated to `jsc.sum([jsc.bool, jsc.nat])`.","      - **Note** `oneof` cannot be shrinked, because the union is untagged, we don't know which shrink to use.","  - *conjunction*: `\"bool & nat\"` is evaluated to `jsc.tuple(jsc.bool, jsc.nat)`.","  - *anonymous records*: `\"{ b: bool; n: nat }\"` is evaluated to `jsc.record({ b: jsc.bool, n: jsc.nat })`.","  - *EXPERIMENTAL: recursive types*: `\"rec list -> unit | (nat & list)\"`.","*/","","var arbitrary = require(\"./arbitrary.js\");","var assert = require(\"assert\");","var record = require(\"./record.js\");","var array = require(\"./array.js\");","var fn = require(\"./fn.js\");","var typifyParser = require(\"typify-parser\");","var utils = require(\"./utils.js\");","","// Forward declarations","var compileType;","var compileTypeArray;","","function compileIdent(env, type) {","  var g = env[type.value];","  if (!g) {","    throw new Error(\"Unknown arbitrary: \" + type.value);","  }","  return g;","}","","function compileApplication(env, type) {","  var callee = compileType(env, type.callee);","  var args = compileTypeArray(env, type.args);","","  return callee.apply(undefined, args);","}","","function compileFunction(env, type) {","  // we don't care about argument type","  var result = compileType(env, type.result);","  return fn.fn(result);","}","","function compileBrackets(env, type) {","  var arg = compileType(env, type.arg);","  return array.array(arg);","}","","function compileDisjunction(env, type) {","  var args = compileTypeArray(env, type.args);","  return arbitrary.sum(args);","}","","function compileConjunction(env, type) {","  var args = compileTypeArray(env, type.args);","  return arbitrary.tuple(args);","}","","function compileRecord(env, type) {","  // TODO: use mapValues","  var spec = {};","  Object.keys(type.fields).forEach(function (key) {","    spec[key] = compileType(env, type.fields[key]);","  });","  return record.arbitrary(spec);","}","","function compileRecursive(env, type) {","  assert(type.arg.type === \"disjunction\", \"recursive type's argument should be disjunction\");","","  // bound variable","  var name = type.name;","","  var par = utils.partition(type.arg.args, function (t) {","    return typifyParser.freeVars(t).indexOf(name) === -1;","  });","","  var terminal = par[0];","","  if (terminal.length === 0) {","    throw new Error(\"Recursive type without non-recursive branch\");","  }","","  var terminalArb = compileType(env, {","    type: \"disjunction\",","    args: terminal,","  });","","  return arbitrary.recursive(terminalArb, function (arb) {","    var arbEnv = {};","    arbEnv[name] = arb;","    var newEnv = utils.merge(env, arbEnv);","    return compileType(newEnv, type.arg);","  });","}","","compileType = function compileTypeFn(env, type) {","  switch (type.type) {","    case \"ident\": return compileIdent(env, type);","    case \"application\": return compileApplication(env, type);","    case \"function\": return compileFunction(env, type);","    case \"brackets\": return compileBrackets(env, type);","    case \"disjunction\": return compileDisjunction(env, type);","    case \"conjunction\": return compileConjunction(env, type);","    case \"record\": return compileRecord(env, type);","    case \"number\": return type.value;","    case \"recursive\": return compileRecursive(env, type);","    default: throw new Error(\"Unsupported typify ast type: \" + type.type);","  }","};","","compileTypeArray = function compileTypeArrayFn(env, types) {","  return types.map(function (type) {","    return compileType(env, type);","  });","};","","function parseTypify(env, str) {","  var type = typifyParser(str);","  return compileType(env, type);","}","","module.exports = {","  parseTypify: parseTypify,","};",""],"l":{"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"34":1,"35":1,"37":1,"38":0,"39":0,"40":0,"42":0,"45":1,"46":0,"47":0,"49":0,"52":1,"54":0,"55":0,"58":1,"59":0,"60":0,"63":1,"64":0,"65":0,"68":1,"69":0,"70":0,"73":1,"75":0,"76":0,"77":0,"79":0,"82":1,"83":0,"86":0,"88":0,"89":0,"92":0,"94":0,"95":0,"98":0,"103":0,"104":0,"105":0,"106":0,"107":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"126":1,"127":0,"128":0,"132":1,"133":0,"134":0,"137":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/functor.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/functor.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"isPromise","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}}},"2":{"name":"map","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":19}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":18},"end":{"line":27,"column":31}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":31}}},"5":{"name":"bind","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":24}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":6},"end":{"line":57,"column":19}}},"7":{"name":"run","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":16}}},"8":{"name":"pure","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":17}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":16,"column":1}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":61}},"4":{"start":{"line":25,"column":0},"end":{"line":37,"column":1}},"5":{"start":{"line":26,"column":2},"end":{"line":36,"column":3}},"6":{"start":{"line":27,"column":4},"end":{"line":29,"column":7}},"7":{"start":{"line":28,"column":6},"end":{"line":28,"column":23}},"8":{"start":{"line":30,"column":9},"end":{"line":36,"column":3}},"9":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"12":{"start":{"line":44,"column":0},"end":{"line":65,"column":1}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":8}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":10}},"15":{"start":{"line":47,"column":2},"end":{"line":52,"column":3}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":31}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":14}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":12}},"19":{"start":{"line":54,"column":2},"end":{"line":64,"column":3}},"20":{"start":{"line":55,"column":4},"end":{"line":61,"column":6}},"21":{"start":{"line":59,"column":8},"end":{"line":59,"column":27}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":21}},"23":{"start":{"line":68,"column":0},"end":{"line":76,"column":1}},"24":{"start":{"line":69,"column":2},"end":{"line":75,"column":3}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":23}},"26":{"start":{"line":71,"column":9},"end":{"line":75,"column":3}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":24}},"28":{"start":{"line":74,"column":4},"end":{"line":74,"column":13}},"29":{"start":{"line":78,"column":0},"end":{"line":84,"column":1}},"30":{"start":{"line":79,"column":2},"end":{"line":83,"column":3}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":13}},"32":{"start":{"line":82,"column":4},"end":{"line":82,"column":26}},"33":{"start":{"line":86,"column":0},"end":{"line":92,"column":2}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":9},"end":{"line":14,"column":28}},{"start":{"line":14,"column":32},"end":{"line":14,"column":60}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":9}},{"start":{"line":30,"column":9},"end":{"line":30,"column":9}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":9},"end":{"line":71,"column":9}},{"start":{"line":71,"column":9},"end":{"line":71,"column":9}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]}},"code":["/* @flow weak */","\"use strict\";","","var trampa = require(\"trampa\");","","/**","  #### isPromise p : bool","","  Optimistic duck-type check for promises.","  Returns `true` if p is an object with `.then` function property.","*/","function isPromise(p) {","  /* eslint-disable no-new-object */","  return new Object(p) === p && typeof p.then === \"function\";","  /* eslint-enable non-new-object */","}","","/**","  #### map (Functor f) => (p : f a) (g : a -> b) : f b","","  This is functor map, known as `map` or `fmap`.","  Essentially `f(p)`. If `p` is promise, returns new promise.","  Using `map` makes code look very much [CPS-style](http://en.wikipedia.org/wiki/Continuation-passing_style).","*/","function map(p, g) {","  if (isPromise(p)) {","    return p.then(function (x) {","      return map(x, g);","    });","  } else if (trampa.isTrampoline(p)) {","    return p.jump(function (x) {","      return map(x, g);","    });","  } else {","    return g(p);","  }","}","","/**","  #### bind (Functor f) => (k : a -> f b) (xs : a) (h : b -> f c) -> f c","","  This is almost monadic bind.","*/","function bind(f, xs, h) {","  var r;","  var exc;","  try {","    r = f.apply(undefined, xs);","  } catch (e) {","    r = false;","    exc = e;","  }","","  if (isPromise(r)) {","    return r.then(","      h,","      function (e) {","        // exc is always unset here","        return h(false, e);","      }","    );","  } else {","    return h(r, exc);","  }","}","","// recursively unwrap trampoline and promises","function run(x) {","  if (isPromise(x)) {","    return x.then(run);","  } else if (trampa.isTrampoline(x)) {","    return run(x.run());","  } else {","    return x;","  }","}","","function pure(x) {","  if (isPromise(x)) {","    return x;","  } else {","    return trampa.wrap(x);","  }","}","","module.exports = {","  isPromise: isPromise,","  map: map,","  pure: pure,","  bind: bind,","  run: run,","};",""],"l":{"4":1,"12":1,"14":0,"25":1,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"35":0,"44":1,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"54":0,"55":0,"59":0,"63":0,"68":1,"69":0,"70":0,"71":0,"72":0,"74":0,"78":1,"79":0,"80":0,"82":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/suchthat.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/lib/suchthat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"suchthat","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":31},"end":{"line":28,"column":47}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":49,"column":1}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}},"9":{"start":{"line":17,"column":2},"end":{"line":22,"column":3}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":24}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":22}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":44}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":69}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"15":{"start":{"line":27,"column":2},"end":{"line":48,"column":5}},"16":{"start":{"line":29,"column":6},"end":{"line":40,"column":7}},"17":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"18":{"start":{"line":32,"column":10},"end":{"line":32,"column":16}},"19":{"start":{"line":33,"column":10},"end":{"line":33,"column":20}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":36}},"21":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"22":{"start":{"line":38,"column":10},"end":{"line":38,"column":19}},"23":{"start":{"line":44,"column":6},"end":{"line":44,"column":45}},"24":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":34},"end":{"line":24,"column":62}},{"start":{"line":24,"column":65},"end":{"line":24,"column":68}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]}},"code":["/* @flow weak */","\"use strict\";","","var environment = require(\"./environment.js\");","var typify = require(\"./typify.js\");","var utils = require(\"./utils.js\");","var generator = require(\"./generator.js\");","var shrink = require(\"./shrink.js\");","var arbitraryBless = require(\"./arbitraryBless.js\");","","/**","  - `suchthat(arb: arbitrary a, userenv: env?, p : a -> bool): arbitrary a`","      Arbitrary of values that satisfy `p` predicate. It's advised that `p`'s accept rate is high.","*/","function suchthat(arb, userenv, predicate) {","  var env;","  if (arguments.length === 2) {","    predicate = userenv;","    env = environment;","  } else {","    env = utils.merge(environment, userenv);","  }","","  arb = typeof arb === \"string\" ? typify.parseTypify(env, arb) : arb;","  arb = utils.force(arb);","","  return arbitraryBless({","    generator: generator.bless(function (size) {","      for (var i = 0; ; i++) {","        // if 5 tries failed, increase size","        if (i > 5) {","          i = 0;","          size += 1;","        }","","        var x = arb.generator(size);","        if (predicate(x)) {","          return x;","        }","      }","    }),","","    shrink: shrink.bless(function (x) {","      return arb.shrink(x).filter(predicate);","    }),","","    show: arb.show,","  });","}","","module.exports = {","  suchthat: suchthat,","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"15":1,"16":0,"17":0,"18":0,"19":0,"21":0,"24":0,"25":0,"27":0,"29":0,"31":0,"32":0,"33":0,"36":0,"37":0,"38":0,"44":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/karma.jasmine.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsverify/node_modules/jsverify/karma.jasmine.conf.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":35}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":24,"column":2}},"2":{"start":{"line":4,"column":2},"end":{"line":23,"column":5}}},"branchMap":{},"code":["/* eslint strict:[2,\"function\"] */","module.exports = function (config) {","  \"use strict\";","  config.set({","    basePath: \"\",","    frameworks: [\"jasmine\"],","    files: [","      \"helpers/jasmineHelpers2.js\",","      \"dist/jsverify.standalone.js\",","      \"spec/*.js\",","    ],","    exclude: [","    ],","    preprocessors: {","    },","    reporters: [\"progress\"],","    port: 9876,","    colors: true,","    logLevel: config.LOG_INFO,","    autoWatch: false,","    browsers: [\"Chrome\", \"Firefox\"],","    singleRun: true,","  });","};",""],"l":{"2":1,"4":0}}}